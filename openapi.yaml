openapi: 3.0.0
info:
  title: 'Humanity API'
  contact:
    name: Humanity
    url: 'https://www.humanity.com'
    email: support@humanity.com
  version: '0.1'
servers:
  -
    url: 'https://www.humanity.engineering'
  -
    url: 'https://www.test-1.humanitytcp-dev.com'
  -
    url: 'https://www.test-2.humanitytcp-dev.com'
  -
    url: 'https://www.test-3.humanitytcp-dev.com'
  -
    url: 'https://www.test-4.humanitytcp-dev.com'
  -
    url: 'https://www.dev.humanitytcp-dev.com'
  -
    url: 'https://www.humanitystaging.humanitytcp-dev.com'
paths:
  /api/v2/about/release:
    get:
      tags:
        - About
      summary: 'Release info'
      operationId: getRelease
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: {  }
              examples:
                success:
                  summary: 'success response'
                  value: { version: 0.0.0 }
  '/api/v2/integration-api/{vendorType}/companies/{integrationId}':
    get:
      tags:
        - Integrations
      summary: 'Get a company data'
      description: 'Return company data for given integration id'
      operationId: getCompany
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseCompanyObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { id: '32', name: 'HUMCo&98765', domain: team215, created: '1658245670', language: en_US, master: '14', parent: '31', is_parent: '1', unique_id: null, settings: { admin_past_edit: '0', coworkers_contacts: '0', timeout: '0', message_wall_uploads: '0', book_days_off: '1', book_days_off_adv: '-1', book_days_off_max: '30', confirm_trade_before: '0', confirm_trade_after: '1', sms: '1', email: '1', pm: '1', visible_staff: '1', visible_staff_details: '1', visible_coworkers: '1', trade_shifts: '1', future_avail: '1', weekly_avail: '1', visible_overview: '1', visible_own: '1', message_wall_on: '1', message_wall_emp: '1', message_wall_comments: '1', on_now: '1', shift_confirm: '1', shift_drop: '1', shift_autoconfirm: '0', timeclock: '1', tc_terminal_lock: '0', tc_round_to: '-1', tc_round_to_in: '-1', tc_round_to_out: '-1', tc_clock_in_timeframe: '-1', tc_clock_out_timeframe: '-1', tc_autoclockout: '18', tc_webcam: '1', tc_empl_import: '1', tc_empl_addtime: '0', tc_empl_edittime: '0', 24hr: '1', draft: '0', date: 'Mj,Y', startday: '2', currency: '1', viewadvance: '-1', login_splogo: '0', scosting: '1', overtime: '45', start_day: '1', end_day: '7', start_time: '33', end_time: '85', timezone: '-05:00,0' }, admin: { id: '39750', name: Admin, email: null }, staff: [{ id: '39750', name: Admin }], locations: [], positions: false, franchise: '32', integrations: { Workato: [{ id: '14', company_id: 32, integration_type: 11, integration_id: a5f674f452b60155447198c57807f108, extra: null }] } }, metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', errors: 'Unable to find entity where integration_id=152046dee350017fb2cf8a1a0b634137 and integration_type=1234.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    delete:
      tags:
        - Integrations
      summary: 'Delete company'
      description: 'Delete a company with given integration id'
      operationId: deleteCompany
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseCompanyObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [], metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
                error:
                  summary: 'error response'
                  value: { status: 14, data: 'Delete Failed - Your DELETE request failed', errors: 'Unable to find entity where integration_id=152046dee350017fb2cf8a1a0b634139 and integration_type=1234.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/company':
    post:
      tags:
        - Integrations
      summary: 'Create or update company'
      description: 'Create or update a company with given integration id'
      operationId: createOrUpdateCompany
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'company create/update payload'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/companyObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseCompanyObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                'update success':
                  summary: 'update success response'
                  value: { status: 1, data: { integrations: { Workato: [{ id: '81', company_id: 102, integration_type: 11, integration_id: child24112022, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
                'create success':
                  summary: 'create success response'
                  value: { status: 1, data: { id: '102', name: Company47, domain: team247, created: '1669291806', language: en_US, master: '14', parent: '14', is_parent: '0', unique_id: null, settings: { admin_past_edit: '0', coworkers_contacts: '0', timeout: '0', message_wall_uploads: '0', book_days_off: '1', book_days_off_adv: '-1', book_days_off_max: '30', confirm_trade_before: '0', confirm_trade_after: '1', sms: '1', email: '1', pm: '1', visible_staff: '1', visible_staff_details: '1', visible_coworkers: '1', trade_shifts: '1', future_avail: '1', weekly_avail: '1', visible_overview: '1', visible_own: '1', message_wall_on: '1', message_wall_emp: '1', message_wall_comments: '1', on_now: '1', shift_confirm: '1', shift_drop: '1', shift_autoconfirm: '0', timeclock: '1', tc_terminal_lock: '0', tc_round_to: '-1', tc_round_to_in: '-1', tc_round_to_out: '-1', tc_clock_in_timeframe: '-1', tc_clock_out_timeframe: '-1', tc_autoclockout: '18', tc_webcam: '1', tc_empl_import: '1', tc_empl_addtime: '0', tc_empl_edittime: '0', 24hr: '1', draft: '0', date: 'Mj,Y', startday: '2', currency: '1', viewadvance: '-1', login_splogo: '0', scosting: '1', overtime: '45', start_day: '1', end_day: '7', start_time: '33', end_time: '85', timezone: '-05:00,0' }, admin: { id: '40657', name: Admin, email: null }, staff: [{ id: '40657', name: Admin }], locations: [], positions: false, franchise: '14', integrations: { Workato: [{ id: '81', company_id: 102, integration_type: 11, integration_id: child24112022, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
                'create error':
                  summary: 'create error response'
                  value: { status: 12, data: 'Create Failed - Your CREATE request failed', errors: 'Company already exists.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'create invalid param error':
                  summary: 'create invalid param error response'
                  value: { status: 89, errors: [{ id: 01gjmy8qh4p4nfxphf773jz9sj, status: 400, state: BAD_REQUEST, title: '', detail: 'Field ''clone_positions'' has error: ''Does not have a value in the enumeration [0,1]''', source: [] }] }
                'update error':
                  summary: 'update error response'
                  value: { status: 8, data: 'Missing parameters - Your request is missing a required parameter', errors: 'missing: integration_id', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'update permissions error':
                  summary: 'update permissions error response'
                  value: { status: 13, data: 'Update Failed - Your UPDATE request failed', errors: 'You don''t have permission to perform this action', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/companies':
    get:
      tags:
        - Integrations
      summary: 'Get all companies'
      description: 'Return data about all companies under the company'
      operationId: getCompanies
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseCompanyObject'
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [{ id: '19', name: GlobalModernServicesCompanies, parent: '14', is_parent: '1' }, { id: '20', name: GMSAsiaPacific, parent: '19', is_parent: '1' }, { id: '21', name: GlobalModernServicesLtd.(China), parent: '20', is_parent: '1' }, { id: '22', name: GlobalModernServicesSdnBhd(Malaysia), parent: '20', is_parent: '1' }, { id: '23', name: GlobalModernServicesPty.Ltd.(Australia), parent: '20', is_parent: '1' }, { id: '24', name: GlobalModernServicesLTD(NewZealand), parent: '20', is_parent: '1' }, { id: '25', name: GlobalModernServicesK.K.(Japan), parent: '20', is_parent: '1' }], metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'success empty':
                  summary: 'empty response'
                  value: { status: 1, data: [], metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', errors: 'Error happened while fetching integrations data', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/employees/{integrationId}':
    get:
      tags:
        - Integrations
      summary: 'Get an employee data'
      description: 'Return employee data for given integration id'
      operationId: getEmployee
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { id: '50000', eid: null, status: '0', deleted: '0', deleted_by: '0', legal_agree: '0', referral: '0', location: '0', wage: null, name: 'Test1 Testing1', nick_name: null, birth_day: '0', birth_month: '0', birth_year: null, email: null, email_confirmed: '0', cell_phone: null, cellphone_confirmed: '0', address: null, city: null, state: null, zip: null, username: 8a0eee06f20ef49cb709a6381572e651, realname: 'Test1 Testing1', timezone_id: null, daily_overtime: '0', updated_at: '2022-05-31 09:14:50', avatar: { small: \/app\/layout\/images\/no_avatar.png, medium: \/app\/layout\/images\/no_avatar.png, large: \/app\/layout\/images\/no_avatar.png }, avatar_url: null, unique_id: null, job_title: null, gender: null, language: null, employee_type: '0', pay_type: '0', work_start_date: '2022-05-31 09:14:50', home_phone: null, last_visit: '0', registered: '1653988490', smsgateway: null, notes: '', pref_shift_autoconfirm: '-1', undertime: '0', overtime: '-1', max_days_row: '-1', monthly_undertime: '0', monthly_overtime: '-1', pref_mtimebshifts: '0', middle_name: null, registration_ip: 172.19.0.6, vendor_id: 11, signature: null, disp_topics: null, disp_posts: null, email_setting: '1', notify_with_post: '0', auto_notify: '0', show_smilies: '1', show_avatars: '1', show_sig: '1', access_keys: '0', dst: '0', time_format: '0', date_format: '0', style: ShiftPlanning, num_posts: '0', last_post: null, last_search: null, last_email_sent: null, admin_note: null, activate_string: null, activate_key: null, pun_bbcode_enabled: '1', pun_bbcode_use_buttons: '1', pun_pm_new_messages: null, pun_pm_long_subject: '1', newsletter: '1', last_sms_sent: '0', p_email: '1', p_phone: '1', notify_sms: '-1', notify_email: '1', e_new_pm: '0', ical: 'https:\/\/team.humanity.engineering\/ical\/df76ccc4a5202fcb5a6ecbcde9580472.ics', startday: '1', pref_caltime: '10', recommendation: '', tut_v2_sched: '0', screen_logger: '0', sc_freq: '-2', newsletter_receiver: '0', pref_sp_skin: '0', inline_wizard_completion: null, title: null, url: null, recommend: '0', jabber: null, icq: null, msn: null, aim: null, yahoo: null, integration_primary_employee_position_id: null, firstname: Test1, lastname: Testing1, tusername: 8a0eee06f20ef49cb709a6381572e651, 24hr: '0', group: '5', last_active: null, timezone: '415', timezone_name: UTC, timezone_info: { timezone_id: '415', name: UTC, name_formatted: '(UTC) UTC', offset: '+0:00', seconds: 0, hours: 0, default: '1', minutes: 0 }, group_name: Employee, status_name: 'Not Activated', schedules: [], skills: [], custom: [], settings: { widgets_layout: [], widgets_enabled: [], schedule_side_panel_visibility: 1, linked_shift_time: 1, schedule_view_selected: week, schedule_timeline_selected: employee, schedule_budget_mode_visibility: 0, schedule_forecast_graph_visibility: 0, forecast_demand_graph_visibility: 0, schedule_copy_rules_choice: 0, shift_skill_filter_visibility: 0, shift_task_assignment_visibility: 0, default_location_panel_visibility: 1, include_ghost_shifts: 0, is_first_schedule_visit: 0, is_new_shift_creation_enabled: 1, notifications: { channel_email: 1, channel_sms: 1, channel_mobile_push: 1, email: [], sms: [], mobile_push: [] } }, permissions: { allow_wage_and_budget: true }, saved_filters: null, integrations: { Workato: [{ id: '1000', employee_id: 50000, company_id: '123', integration_type: 1234, integration_id: 152046dee350017fb2cf8a1a0b634137, extra: null }] }, sso_username: Test_sso_username }, metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', errors: 'Unable to find entity where integration_id=152046dee350017fb2cf8a1a0b634137 and integration_type=1234.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    delete:
      tags:
        - Integrations
      summary: 'Delete employee'
      description: 'Delete an employee with given integration id'
      operationId: deleteEmployee
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [], metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
                error:
                  summary: 'error response'
                  value: { status: 14, data: 'Delete Failed - Your DELETE request failed', errors: 'Unable to find entity where integration_id=152046dee350017fb2cf8a1a0b634139 and integration_type=1234.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/employee':
    post:
      tags:
        - Integrations
      summary: 'Create or update employee'
      description: 'Create or update an employee with given integration id'
      operationId: createOrUpdateEmployee
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'employee create/update payload'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employeeObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                'update success':
                  summary: 'update success response'
                  value: { status: 1, data: { id: '50003', eid: null, status: '0', deleted: '0', deleted_by: '0', legal_agree: '0', referral: '0', location: '0', wage: null, name: 'Test_Create_Name Test_Create_LName', nick_name: null, birth_day: '0', birth_month: '0', birth_year: null, email: null, email_confirmed: '0', cell_phone: null, cellphone_confirmed: '0', address: null, city: null, state: null, zip: null, username: 2319370fd2cc163809d957b98c16ad52, realname: 'Test_Update_Name Test_Update_LName', timezone_id: null, daily_overtime: '0', updated_at: '2022-06-01 13:24:46', avatar: { small: \/app\/layout\/images\/no_avatar.png, medium: \/app\/layout\/images\/no_avatar.png, large: \/app\/layout\/images\/no_avatar.png }, avatar_url: null, unique_id: null, job_title: null, gender: null, language: null, employee_type: '0', pay_type: '0', work_start_date: '2022-05-20 12:22:47', home_phone: null, last_visit: '0', registered: '1653049367', smsgateway: null, notes: '', pref_shift_autoconfirm: '-1', undertime: '0', overtime: '-1', max_days_row: '-1', monthly_undertime: '0', monthly_overtime: '-1', pref_mtimebshifts: '0', middle_name: null, registration_ip: 172.18.0.2, vendor_id: 1, signature: null, disp_topics: null, disp_posts: null, email_setting: '1', notify_with_post: '0', auto_notify: '0', show_smilies: '1', show_avatars: '1', show_sig: '1', access_keys: '0', dst: '0', time_format: '0', date_format: '0', style: ShiftPlanning, num_posts: '0', last_post: null, last_search: null, last_email_sent: null, admin_note: null, activate_string: null, activate_key: null, pun_bbcode_enabled: '1', pun_bbcode_use_buttons: '1', pun_pm_new_messages: null, pun_pm_long_subject: '1', newsletter: '1', last_sms_sent: '0', p_email: '1', p_phone: '1', notify_sms: '-1', notify_email: '1', e_new_pm: '0', ical: 'https:\/\/team.humanity.engineering\/ical\/58b0d1f0d42956ae32caa15fa34b7f94.ics', startday: '1', pref_caltime: '10', recommendation: '', tut_v2_sched: '0', screen_logger: '0', sc_freq: '-2', newsletter_receiver: '0', pref_sp_skin: '0', inline_wizard_completion: null, title: null, url: null, recommend: '0', jabber: null, icq: null, msn: null, aim: null, yahoo: null, integration_primary_employee_position_id: null, firstname: Test_Update_Name, lastname: Test_Update_LName, tusername: 2319370fd2cc163809d957b98c16ad52, 24hr: '0', group: '5', last_active: null, timezone: '415', timezone_name: UTC, group_name: Employee, status_name: 'Not Activated', schedules: [], skills: [], custom: [], settings: { widgets_layout: [[timeclock, training, files, upcomingshifts, anniversary, notices], [onnow, leaves, lateforwork, birthdays], [messagewall]], widgets_enabled: [timeclock, training, upcomingshifts, anniversary, onnow, leaves, lateforwork, birthdays, messagewall, files], schedule_side_panel_visibility: 1, linked_shift_time: 1, schedule_view_selected: week, schedule_timeline_selected: employee, schedule_budget_mode_visibility: 0, schedule_forecast_graph_visibility: 0, forecast_demand_graph_visibility: 0, schedule_copy_rules_choice: 0, shift_skill_filter_visibility: 0, shift_task_assignment_visibility: 0, default_location_panel_visibility: 1, include_ghost_shifts: 0, is_first_schedule_visit: 0, is_new_shift_creation_enabled: 1, notifications: { channel_email: 1, channel_sms: 1, channel_mobile_push: 1, email: [], sms: [], mobile_push: [] } }, permissions: { allow_wage_and_budget: true }, saved_filters: null, integrations: { Workato: [{ id: '1003', employee_id: 50003, company_id: '123', integration_type: 1234, integration_id: 152046dee350017fb2cf8a1a0b634135, extra: null }] }, sso_username: Test_sso_username }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
                'create success':
                  summary: 'create success response'
                  value: { status: 1, data: { id: '50004', eid: null, status: '0', deleted: '0', deleted_by: '0', legal_agree: '0', referral: '0', location: '0', wage: null, name: '', nick_name: null, birth_day: '0', birth_month: '0', birth_year: null, email: null, email_confirmed: '0', cell_phone: null, cellphone_confirmed: '0', address: null, city: null, state: null, zip: null, username: 5757161a2c8d208c75f5ffe78a05ea90, realname: null, timezone_id: null, daily_overtime: '0', updated_at: '2022-06-01 14:30:41', avatar: { small: \/app\/layout\/images\/no_avatar.png, medium: \/app\/layout\/images\/no_avatar.png, large: \/app\/layout\/images\/no_avatar.png }, avatar_url: null, unique_id: null, job_title: null, gender: null, language: null, employee_type: '0', pay_type: '0', work_start_date: '2022-06-01 14:30:41', home_phone: null, last_visit: '0', registered: '1654093841', smsgateway: null, notes: '', pref_shift_autoconfirm: '-1', undertime: '0', overtime: '-1', max_days_row: '-1', monthly_undertime: '0', monthly_overtime: '-1', pref_mtimebshifts: '0', middle_name: null, registration_ip: 172.20.0.5, vendor_id: 11, signature: null, disp_topics: null, disp_posts: null, email_setting: '1', notify_with_post: '0', auto_notify: '0', show_smilies: '1', show_avatars: '1', show_sig: '1', access_keys: '0', dst: '0', time_format: '0', date_format: '0', style: ShiftPlanning, num_posts: '0', last_post: null, last_search: null, last_email_sent: null, admin_note: null, activate_string: null, activate_key: null, pun_bbcode_enabled: '1', pun_bbcode_use_buttons: '1', pun_pm_new_messages: null, pun_pm_long_subject: '1', newsletter: '1', last_sms_sent: '0', p_email: '1', p_phone: '1', notify_sms: '-1', notify_email: '1', e_new_pm: '0', ical: 'https:\/\/team.humanity.engineering\/ical\/db86cdebdcb7c88a714ea0078d3e91aa.ics', startday: '1', pref_caltime: '10', recommendation: '', tut_v2_sched: '0', screen_logger: '0', sc_freq: '-2', newsletter_receiver: '0', pref_sp_skin: '0', inline_wizard_completion: null, title: null, url: null, recommend: '0', jabber: null, icq: null, msn: null, aim: null, yahoo: null, integration_primary_employee_position_id: null, firstname: Create_Name, lastname: Create_LastName, tusername: 5757161a2c8d208c75f5ffe78a05ea90, 24hr: '0', group: '5', last_active: null, timezone: '415', timezone_name: UTC, group_name: Employee, status_name: 'Not Activated', schedules: [], skills: [], custom: [], settings: { widgets_layout: [[timeclock, training, files, upcomingshifts, anniversary, notices], [onnow, leaves, lateforwork, birthdays], [messagewall]], widgets_enabled: [timeclock, training, upcomingshifts, anniversary, onnow, leaves, lateforwork, birthdays, messagewall, files], schedule_side_panel_visibility: 1, linked_shift_time: 1, schedule_view_selected: week, schedule_timeline_selected: employee, schedule_budget_mode_visibility: 0, schedule_forecast_graph_visibility: 0, forecast_demand_graph_visibility: 0, schedule_copy_rules_choice: 0, shift_skill_filter_visibility: 0, shift_task_assignment_visibility: 0, default_location_panel_visibility: 1, include_ghost_shifts: 0, is_first_schedule_visit: 0, is_new_shift_creation_enabled: 1, notifications: { channel_email: 1, channel_sms: 1, channel_mobile_push: 1, email: [], sms: [], mobile_push: [] } }, permissions: { allow_wage_and_budget: true }, saved_filters: null, integrations: { Workato: [{ id: '1004', employee_id: 50004, company_id: '1234', integration_type: 1234, integration_id: 152046dee350017fb2cf8a1a0b634142, extra: null }] }, sso_username: Test_sso_username }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
                'create error':
                  summary: 'create error response'
                  value: { status: 12, data: 'Create Failed - Your CREATE request failed', errors: 'Employee already exists.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'create invalid param error':
                  summary: 'create invalid param error response'
                  value: { status: 9, data: 'Invalid parameters - Your request has an invalid parameter type', errors: 'Supplied data has failed validation', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'update error':
                  summary: 'update error response'
                  value: { status: 8, data: 'Missing parameters - Your request is missing a required parameter', errors: 'missing: first_name', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'update permissions error':
                  summary: 'update permissions error response'
                  value: { status: 13, data: 'Update Failed - Your UPDATE request failed', errors: 'You don''t have permission to perform this action', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/employees':
    get:
      tags:
        - Integrations
      summary: 'Get all employees'
      description: 'Return data about all employees under the company'
      operationId: getEmployees
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [{ id: '50000', language: null, work_start_date: '2022-05-31 08:53:03', eid: null, name: Test1, firstname: Testing1, lastname: null, username: 8a0eee06f20ef49cb709a6381572e651, email: null, group: '5', status: '0', deleted: '0', wage: null, nick_name: null, birth_day: '0', birth_month: '0', cell_phone: null, home_phone: null, avatar: { small: \/app\/layout\/images\/no_avatar.png, medium: \/app\/layout\/images\/no_avatar.png, large: \/app\/layout\/images\/no_avatar.png }, avatar_url: null, address: null, city: null, state: null, zip: null, notes: '', ical: 'https:\/\/team.humanity.engineering\/ical\/7f8245177d4544ac6787627b2524b54d.ics', registered: '1653987183', p_phone: '1', p_email: '1', location: '0', timezone: '415', job_title: null, updated_at: '2022-05-31 08:53:04', unique_id: null, daily_overtime: '0', vendor_id: 1, schedules: [], skills: [], timezone_name: UTC, group_name: Employee, status_name: 'Not Activated', custom: [], settings: { widgets_layout: [], widgets_enabled: [], schedule_side_panel_visibility: 1, linked_shift_time: 1, schedule_view_selected: week, schedule_timeline_selected: employee, schedule_budget_mode_visibility: 0, schedule_forecast_graph_visibility: 0, forecast_demand_graph_visibility: 0, schedule_copy_rules_choice: 0, shift_skill_filter_visibility: 0, shift_task_assignment_visibility: 0, default_location_panel_visibility: 1, include_ghost_shifts: 0, is_first_schedule_visit: 0, is_new_shift_creation_enabled: 1 }, last_active: null, integrations: { Workato: [{ id: '1000', employee_id: 50000, company_id: '123', integration_type: 1234, integration_id: 152046dee350017fb2cf8a1a0b634137, extra: null }] } }, { id: '50001', language: null, work_start_date: '2022-05-31 09:14:50', eid: null, name: 'Test2 Testing2', firstname: Test2, lastname: Testing2, username: 348232c7e8c1f0ad0243dff8b9c8830e, email: null, group: '5', status: '0', deleted: '0', wage: null, nick_name: null, birth_day: '0', birth_month: '0', cell_phone: null, home_phone: null, avatar: { small: \/app\/layout\/images\/no_avatar.png, medium: \/app\/layout\/images\/no_avatar.png, large: \/app\/layout\/images\/no_avatar.png }, avatar_url: null, address: null, city: null, state: null, zip: null, notes: '', ical: 'https:\/\/team.humanity.engineering\/ical\/df76ccc4a5202fcb5a6ecbcde9580472.ics', registered: '1653988490', p_phone: '1', p_email: '1', location: '0', timezone: '415', job_title: null, updated_at: '2022-05-31 09:14:50', unique_id: null, daily_overtime: '0', vendor_id: 11, schedules: [], skills: [], timezone_name: UTC, group_name: Employee, status_name: 'Not Activated', custom: [], settings: { widgets_layout: [], widgets_enabled: [], schedule_side_panel_visibility: 1, linked_shift_time: 1, schedule_view_selected: week, schedule_timeline_selected: employee, schedule_budget_mode_visibility: 0, schedule_forecast_graph_visibility: 0, forecast_demand_graph_visibility: 0, schedule_copy_rules_choice: 0, shift_skill_filter_visibility: 0, shift_task_assignment_visibility: 0, default_location_panel_visibility: 1, include_ghost_shifts: 0, is_first_schedule_visit: 0, is_new_shift_creation_enabled: 1 }, last_active: null, integrations: { Workato: [{ id: '1001', employee_id: 50001, company_id: '123', integration_type: 1234, integration_id: 152046dee350017fb2cf8a1a0b634138, extra: null }] } }, { id: '50002', language: null, work_start_date: '2022-05-20 14:31:28', eid: null, name: 'Test0 Testing0', firstname: Test0, lastname: Testing0, username: 3ba2b4b2bba7a52eca84ae358878530c, email: ds+testworkato@email.com, group: '5', status: '0', deleted: '0', wage: null, nick_name: null, birth_day: '0', birth_month: '0', cell_phone: null, home_phone: null, avatar: { small: \/app\/layout\/images\/no_avatar.png, medium: \/app\/layout\/images\/no_avatar.png, large: \/app\/layout\/images\/no_avatar.png }, avatar_url: null, address: null, city: null, state: null, zip: null, notes: '', ical: 'https:\/\/team.humanity.engineering\/ical\/d365599be1fea7ca86f6930eb7ca2eac.ics', registered: '1653057088', p_phone: '1', p_email: '1', location: '0', timezone: '415', job_title: null, updated_at: '2022-05-31 08:52:23', unique_id: null, daily_overtime: '0', vendor_id: 1, schedules: [], skills: [], timezone_name: UTC, group_name: Employee, status_name: 'Not Activated', custom: [], settings: { widgets_layout: [], widgets_enabled: [], schedule_side_panel_visibility: 1, linked_shift_time: 1, schedule_view_selected: week, schedule_timeline_selected: employee, schedule_budget_mode_visibility: 0, schedule_forecast_graph_visibility: 0, forecast_demand_graph_visibility: 0, schedule_copy_rules_choice: 0, shift_skill_filter_visibility: 0, shift_task_assignment_visibility: 0, default_location_panel_visibility: 1, include_ghost_shifts: 0, is_first_schedule_visit: 0, is_new_shift_creation_enabled: 1 }, last_active: null, integrations: { Workato: [{ id: '1002', employee_id: 50002, company_id: '123', integration_type: 1234, integration_id: 152046dee350017fb2cf8a1a0b634136, extra: null }] } }], metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'success empty':
                  summary: 'empty response'
                  value: { status: 1, data: [], metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', errors: 'Error happened while fetching integrations data', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/bulk/employees_async':
    post:
      tags:
        - Integrations
      summary: 'Create or update employees - bulk operation'
      description: 'Create or update each employee sent through a bulk request'
      operationId: bulkCreateOrUpdateEmployee
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'bulk employee create/update payload'
        required: true
        content:
          application/json:
            schema:
              properties:
                employees:
                  type: array
                  items: { $ref: '#/components/schemas/bulkEmployeeObject' }
              type: object
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { jobId: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                accepted:
                  summary: 'accepted response'
                  value: { status: 202, data: { jobId: ba5b8b9c-acbd-437d-80ce-76188dd347ee }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Field ''employees[0].integration_id'' has error: ''The property integration_id is required''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/employees/{employeeIntegrationId}/leave-types':
    get:
      tags:
        - Integrations
      summary: 'Get all employee leave types data'
      description: 'Return employee leave types data for given integration id'
      operationId: getEmployeeLeaveTypes
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/employeeIntegrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseEmployeeLeaveTypeObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { employee_id: '40657', leave_types: { '70': { enabled: true, entitled: 5, remaining: 5 } }, integrations: { Workato: [{ id: '838', employee_id: 40657, company_id: '102', integration_type: 11, integration_id: 3aa5550b7fe348b98d7b5741afc65534, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', error: 'Unable to find entity where integration_id=9fc006a67f450178bbd416dd1998a70d and integration_type=11.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/employees/{employeeIntegrationId}/leave-types/{leaveTypeIntegrationId}':
    post:
      tags:
        - Integrations
      summary: 'Create or update employee leave type'
      description: 'Create or update an employee leave type with given integration ids'
      operationId: createOrUpdateEmployeeLeaveType
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/employeeIntegrationId'
        -
          $ref: '#/components/parameters/leaveTypeIntegrationId'
      requestBody:
        description: 'employee leave type create/update payload'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employeeLeaveTypeObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseEmployeeLeaveTypeObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                'update success':
                  summary: 'update success response'
                  value: { status: 1, data: { employee_id: '40657', leave_types: { '70': { enabled: true, entitled: 5, remaining: 5 } } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'update error':
                  summary: 'update error response'
                  value: { status: 8, data: 'Missing parameters - Your request is missing a required parameter', error: 'missing: enabled', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'create invalid param error':
                  summary: 'create invalid param error response'
                  value: { status: 9, data: 'Invalid parameters - Your request has an invalid parameter type', error: 'integer expected: entitled', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'update permissions error':
                  summary: 'update permissions error response'
                  value: { status: 13, data: 'Update Failed - Your UPDATE request failed', errors: 'You don''t have permission to perform this action', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/bulk/employee_leave_types_async':
    post:
      tags:
        - Integrations
      summary: 'Create or update employee leave types - bulk operation'
      description: 'Create or update each employee leave type sent through a bulk request'
      operationId: bulkCreateOrUpdateEmployeeLeaveType
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'bulk employee leave type create/update payload'
        required: true
        content:
          application/json:
            schema:
              properties:
                employee_leave_types:
                  type: array
                  items: { $ref: '#/components/schemas/bulkEmployeeLeaveTypeObject' }
              type: object
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { jobId: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                accepted:
                  summary: 'accepted response'
                  value: { status: 202, data: { jobId: ba5b8b9c-acbd-437d-80ce-76188dd347ee }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Field ''employee_leave_types[0].employee_integration_id'' has error: ''The property employee_integration_id is required''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/employees/{employeeIntegrationId}/positions/{positionIntegrationId}':
    get:
      tags:
        - Integrations
      summary: 'Get an employee position data'
      description: 'Return employee position data for given integration ids'
      operationId: getEmployeePosition
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/employeeIntegrationId'
        -
          $ref: '#/components/parameters/positionIntegrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseEmployeePositionObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { id: 38820104, employee_id: 40050, position_id: 1464980, created_by: 39778, date: 1663433073, wage: 9, ratecard: null, payroll_ratecard_id: null, payroll_wage: null, vendor_id: 11, integrations: { Workato: [{ id: '939', employee_position_id: 38820104, company_id: '60', integration_type: 11, integration_id: 9fc006a67f450178bbd416dd1998a70d-fed90ff655851044988f0d48bf4500e2, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: 'Unable to find entity where integration_id=152046dee350017fb2cf8a1a0b634137 and integration_type=11' }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    post:
      tags:
        - Integrations
      summary: 'Create or update employee position'
      description: 'Create or update an employee position with given integration ids'
      operationId: createOrUpdateEmployeePosition
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/employeeIntegrationId'
        -
          $ref: '#/components/parameters/positionIntegrationId'
      requestBody:
        description: 'employee create/update payload'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/employeePositionObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseEmployeePositionObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                'update success':
                  summary: 'update success response'
                  value: { status: 1, data: { id: 38820104, employee_id: 40050, position_id: 1464980, created_by: 39778, date: 1663433073, wage: 9, ratecard: null, payroll_ratecard_id: null, payroll_wage: null, vendor_id: 11, integrations: { Workato: [{ id: '939', employee_position_id: 38820104, company_id: '60', integration_type: 11, integration_id: 9fc006a67f450178bbd416dd1998a70d-fed90ff655851044988f0d48bf4500e2, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'create success':
                  summary: 'create success response'
                  value: { status: 1, data: { id: 38820104, employee_id: 40050, position_id: 1464980, created_by: 39778, date: 1663433073, wage: null, ratecard: null, payroll_ratecard_id: null, payroll_wage: null, vendor_id: 11, integrations: { Workato: [{ id: '939', employee_position_id: 38820104, company_id: '60', integration_type: 11, integration_id: 9fc006a67f450178bbd416dd1998a70d-fed90ff655851044988f0d48bf4500e2, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'create error':
                  summary: 'create error response'
                  value: { status: 12, data: 'Create Failed - Your CREATE request failed', error: 'Employee position already exists.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'create invalid param error':
                  summary: 'create invalid param error response'
                  value: { status: 9, data: 'Invalid parameters - Your request has an invalid parameter type', error: 'Supplied data has failed validation', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'update permissions error':
                  summary: 'update permissions error response'
                  value: { status: 13, data: 'Update Failed - Your UPDATE request failed', errors: 'You don''t have permission to perform this action', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    delete:
      tags:
        - Integrations
      summary: 'Delete employee position'
      description: 'Delete an employee position with given integration ids'
      operationId: deleteEmployeePosition
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/employeeIntegrationId'
        -
          $ref: '#/components/parameters/positionIntegrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseEmployeePositionObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [], metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                error:
                  summary: 'error response'
                  value: { status: 14, data: 'Delete Failed - Your DELETE request failed', errors: 'Unable to find entity where integration_id=152046dee350017fb2cf8a1a0b634139 and integration_type=11.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/employees/{employeeIntegrationId}/positions':
    get:
      tags:
        - Integrations
      summary: 'Get all employee positions'
      description: 'Return data about all employee positions under the company'
      operationId: getEmployeePositions
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/employeeIntegrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseEmployeePositionObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [{ id: 38820106, employee_id: 40050, position_id: 1464767, created_by: 39778, date: 1663435078, wage: 0, ratecard: 0, payroll_ratecard_id: 0, payroll_wage: null, vendor_id: 11, integrations: { Workato: [{ id: '941', employee_position_id: 38820106, company_id: '60', integration_type: 11, integration_id: 9fc006a67f450178bbd416dd1998a70d-fd72fab7db654fa3adbbe83ca23c43cb, extra: null }] } }, { id: 38820105, employee_id: 40050, position_id: 1464980, created_by: 39778, date: 1663434069, wage: 0, ratecard: 0, payroll_ratecard_id: 0, payroll_wage: null, vendor_id: 11, integrations: { Workato: [{ id: '940', employee_position_id: 38820105, company_id: '60', integration_type: 11, integration_id: 9fc006a67f450178bbd416dd1998a70d-fed90ff655851044988f0d48bf4500e2, extra: null }] } }], metadata: [], error: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'success empty':
                  summary: 'empty response'
                  value: { status: 1, data: [], metadata: [], error: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', error: 'Error happened while fetching integrations data', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/bulk/employee_positions_async':
    post:
      tags:
        - Integrations
      summary: 'Create or update employee positions - bulk operation'
      description: 'Create or update each employee position sent through a bulk request'
      operationId: bulkCreateOrUpdateEmployeePosition
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'bulk employee position create/update payload'
        required: true
        content:
          application/json:
            schema:
              properties:
                employee-positions:
                  type: array
                  items: { $ref: '#/components/schemas/bulkEmployeePositionObject' }
              type: object
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseEmployeePositionObject'
              examples:
                accepted:
                  summary: 'accepted response'
                  value: { status: 202, data: { jobId: ba5b8b9c-acbd-437d-80ce-76188dd347ee }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Field ''employee-positions[0].employee_integration_id'' has error: ''The property employee_integration_id is required''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  /api/v2/integration-api/bulk/employees_status:
    get:
      tags:
        - API
      summary: 'Get status about specific employee job'
      description: 'Return current status of some background job'
      operationId: getEmployeeJobStatus
      parameters:
        -
          name: job_id
          in: query
          description: 'Job id - valid UUID'
          required: true
          schema:
            type: string
            maxLength: 512
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { logId: { type: string }, jobId: { type: string }, integrationId: { type: string }, startedAt: { type: string }, finishedAt: { type: string }, status: { type: string, enum: [PENDING, PROCESSING, FAILED, FINISHED, CANCELED] }, numberOfRetries: { type: string }, vendorId: { type: integer }, vendorName: { type: string }, companyId: { type: integer }, companyName: { type: string }, syncType: { type: string }, parentSyncId: { type: string }, SyncDirection: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { logId: ceeb07fb-b461-4b29-bdeb-2f9355eda48b, jobId: b10e1838-eb78-45e1-888a-047e5a652d56, integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6, startedAt: null, finishedAt: null, status: PROCESSING, numberOfRetries: 0, vendorId: 0, vendorName: null, companyId: 11, companyName: null, syncType: null, parentSyncId: null, SyncDirection: null }, metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 89, errors: [{ id: 01g4wkhtwcgfnd42w0dzwjy878, status: 400, state: BAD_REQUEST, title: '', detail: 'Invalid jobId provided: b10e1838-eb78-45e1-888a-047e5a652d56', source: [] }] }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Job id is not valid uuid. Provided: lkajdklasd''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  /api/v2/integration-api/bulk/locations_status:
    get:
      tags:
        - API
      summary: 'Get status about specific location job'
      description: 'Return current status of some background job'
      operationId: getLocationsJobStatus
      parameters:
        -
          name: job_id
          in: query
          description: 'Job id - valid UUID'
          required: true
          schema:
            type: string
            maxLength: 512
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { logId: { type: string }, jobId: { type: string }, integrationId: { type: string }, startedAt: { type: string }, finishedAt: { type: string }, status: { type: string, enum: [PENDING, PROCESSING, FAILED, FINISHED, CANCELED] }, numberOfRetries: { type: string }, vendorId: { type: integer }, vendorName: { type: string }, companyId: { type: integer }, companyName: { type: string }, syncType: { type: string }, parentSyncId: { type: string }, SyncDirection: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { logId: ceeb07fb-b461-4b29-bdeb-2f9355eda48b, jobId: b10e1838-eb78-45e1-888a-047e5a652d56, integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6, startedAt: null, finishedAt: null, status: PROCESSING, numberOfRetries: 0, vendorId: 0, vendorName: null, companyId: 11, companyName: null, syncType: null, parentSyncId: null, SyncDirection: null }, metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 89, errors: [{ id: 01g4wkhtwcgfnd42w0dzwjy878, status: 400, state: BAD_REQUEST, title: '', detail: 'Invalid jobId provided: b10e1838-eb78-45e1-888a-047e5a652d56', source: [] }] }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Job id is not valid uuid. Provided: lkajdklasd''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  /api/v2/integration-api/bulk/positions_status:
    get:
      tags:
        - API
      summary: 'Get status about specific position job'
      description: 'Return current status of some background job'
      operationId: getPositionsJobStatus
      parameters:
        -
          name: job_id
          in: query
          description: 'Job id - valid UUID'
          required: true
          schema:
            type: string
            maxLength: 512
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { logId: { type: string }, jobId: { type: string }, integrationId: { type: string }, startedAt: { type: string }, finishedAt: { type: string }, status: { type: string, enum: [PENDING, PROCESSING, FAILED, FINISHED, CANCELED] }, numberOfRetries: { type: string }, vendorId: { type: integer }, vendorName: { type: string }, companyId: { type: integer }, companyName: { type: string }, syncType: { type: string }, parentSyncId: { type: string }, SyncDirection: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { logId: ceeb07fb-b461-4b29-bdeb-2f9355eda48b, jobId: b10e1838-eb78-45e1-888a-047e5a652d56, integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6, startedAt: null, finishedAt: null, status: PROCESSING, numberOfRetries: 0, vendorId: 0, vendorName: null, companyId: 11, companyName: null, syncType: null, parentSyncId: null, SyncDirection: null }, metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 89, errors: [{ id: 01g4wkhtwcgfnd42w0dzwjy878, status: 400, state: BAD_REQUEST, title: '', detail: 'Invalid jobId provided: b10e1838-eb78-45e1-888a-047e5a652d56', source: [] }] }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Job id is not valid uuid. Provided: lkajdklasd''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  /api/v2/integration-api/bulk/employee_positions_status:
    get:
      tags:
        - API
      summary: 'Get status about specific employee position job'
      description: 'Return current status of some background job'
      operationId: getEmployeePositionsJobStatus
      parameters:
        -
          name: job_id
          in: query
          description: 'Job id - valid UUID'
          required: true
          schema:
            type: string
            maxLength: 512
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { logId: { type: string }, jobId: { type: string }, integrationId: { type: string }, startedAt: { type: string }, finishedAt: { type: string }, status: { type: string, enum: [PENDING, PROCESSING, FAILED, FINISHED, CANCELED] }, numberOfRetries: { type: string }, vendorId: { type: integer }, vendorName: { type: string }, companyId: { type: integer }, companyName: { type: string }, syncType: { type: string }, parentSyncId: { type: string }, SyncDirection: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { logId: ceeb07fb-b461-4b29-bdeb-2f9355eda48b, jobId: b10e1838-eb78-45e1-888a-047e5a652d56, integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6, startedAt: null, finishedAt: null, status: PROCESSING, numberOfRetries: 0, vendorId: 0, vendorName: null, companyId: 11, companyName: null, syncType: null, parentSyncId: null, SyncDirection: null }, metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 89, errors: [{ id: 01g4wkhtwcgfnd42w0dzwjy878, status: 400, state: BAD_REQUEST, title: '', detail: 'Invalid jobId provided: b10e1838-eb78-45e1-888a-047e5a652d56', source: [] }] }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Job id is not valid uuid. Provided: lkajdklasd''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  /api/v2/integration-api/bulk/leave_types_status:
    get:
      tags:
        - API
      summary: 'Get status about specific leave type job'
      description: 'Return current status of some background job'
      operationId: getLeaveTypesJobStatus
      parameters:
        -
          name: job_id
          in: query
          description: 'Job id - valid UUID'
          required: true
          schema:
            type: string
            maxLength: 512
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { logId: { type: string }, jobId: { type: string }, integrationId: { type: string }, startedAt: { type: string }, finishedAt: { type: string }, status: { type: string, enum: [PENDING, PROCESSING, FAILED, FINISHED, CANCELED] }, numberOfRetries: { type: string }, vendorId: { type: integer }, vendorName: { type: string }, companyId: { type: integer }, companyName: { type: string }, syncType: { type: string }, parentSyncId: { type: string }, SyncDirection: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { logId: ceeb07fb-b461-4b29-bdeb-2f9355eda48b, jobId: b10e1838-eb78-45e1-888a-047e5a652d56, integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6, startedAt: null, finishedAt: null, status: PROCESSING, numberOfRetries: 0, vendorId: 0, vendorName: null, companyId: 11, companyName: null, syncType: null, parentSyncId: null, SyncDirection: null }, metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 89, errors: [{ id: 01g4wkhtwcgfnd42w0dzwjy878, status: 400, state: BAD_REQUEST, title: '', detail: 'Invalid jobId provided: b10e1838-eb78-45e1-888a-047e5a652d56', source: [] }] }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Job id is not valid uuid. Provided: lkajdklasd''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  /api/v2/integration-api/bulk/employee_leave_types_status:
    get:
      tags:
        - API
      summary: 'Get status about specific employee leave type job'
      description: 'Return current status of some background job'
      operationId: getEmployeeLeaveTypesJobStatus
      parameters:
        -
          name: job_id
          in: query
          description: 'Job id - valid UUID'
          required: true
          schema:
            type: string
            maxLength: 512
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { logId: { type: string }, jobId: { type: string }, integrationId: { type: string }, startedAt: { type: string }, finishedAt: { type: string }, status: { type: string, enum: [PENDING, PROCESSING, FAILED, FINISHED, CANCELED] }, numberOfRetries: { type: string }, vendorId: { type: integer }, vendorName: { type: string }, companyId: { type: integer }, companyName: { type: string }, syncType: { type: string }, parentSyncId: { type: string }, SyncDirection: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { logId: ceeb07fb-b461-4b29-bdeb-2f9355eda48b, jobId: b10e1838-eb78-45e1-888a-047e5a652d56, integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6, startedAt: null, finishedAt: null, status: PROCESSING, numberOfRetries: 0, vendorId: 0, vendorName: null, companyId: 11, companyName: null, syncType: null, parentSyncId: null, SyncDirection: null }, metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 89, errors: [{ id: 01g4wkhtwcgfnd42w0dzwjy878, status: 400, state: BAD_REQUEST, title: '', detail: 'Invalid jobId provided: b10e1838-eb78-45e1-888a-047e5a652d56', source: [] }] }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Job id is not valid uuid. Provided: lkajdklasd''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  /api/v2/integration-api/bulk/leaves_status:
    get:
      tags:
        - API
      summary: 'Get status about specific leave job'
      description: 'Return current status of some background job'
      operationId: getLeavesJobStatus
      parameters:
        -
          name: job_id
          in: query
          description: 'Job id - valid UUID'
          required: true
          schema:
            type: string
            maxLength: 512
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { logId: { type: string }, jobId: { type: string }, integrationId: { type: string }, startedAt: { type: string }, finishedAt: { type: string }, status: { type: string, enum: [PENDING, PROCESSING, FAILED, FINISHED, CANCELED] }, numberOfRetries: { type: string }, vendorId: { type: integer }, vendorName: { type: string }, companyId: { type: integer }, companyName: { type: string }, syncType: { type: string }, parentSyncId: { type: string }, SyncDirection: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { logId: ceeb07fb-b461-4b29-bdeb-2f9355eda48b, jobId: b10e1838-eb78-45e1-888a-047e5a652d56, integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6, startedAt: null, finishedAt: null, status: PROCESSING, numberOfRetries: 0, vendorId: 0, vendorName: null, companyId: 11, companyName: null, syncType: null, parentSyncId: null, SyncDirection: null }, metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 89, errors: [{ id: 01g4wkhtwcgfnd42w0dzwjy878, status: 400, state: BAD_REQUEST, title: '', detail: 'Invalid jobId provided: b10e1838-eb78-45e1-888a-047e5a652d56', source: [] }] }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Job id is not valid uuid. Provided: lkajdklasd''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/leaves/{integrationId}':
    get:
      tags:
        - Integrations
      summary: 'Get a leave data'
      description: 'Return leave data for given integration id'
      operationId: getLeave
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLeaveObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { id: '3', user: '40050', store: '60', date: '1672841011', requested_on: { id: 4998, month: 1, day: 4, wday: 3, year: 2023, weekday: Wed, mname: Jan, week: 1, dayid: 4, timeid: 1, timeid_exact: 1, formatted: 'Jan 4, 2023', iso8601: '2023-01-04T00:00:00+0100', time: '00:00', timestamp: 1672786800, hours: 0, minutes: 0, seconds: 0, date: '2023-01-04 00:00:00', day_of_year: '3', week_adjusted: 1, sp_wday: 4 }, approved_on: '0', status: '0', admin: '39778', comments: '', notes: '', start_day: { id: 5217, month: 8, day: 11, wday: 5, year: 2023, weekday: Fri, mname: Aug, week: 32, dayid: 6, timeid: 1, timeid_exact: 1, formatted: 'Aug 11, 2023', iso8601: '2023-08-11T00:00:00+0200', time: '00:00', timestamp: 1691704800, hours: 0, minutes: 0, seconds: 0, date: '2023-08-11 00:00:00', day_of_year: '222', week_adjusted: 32, sp_wday: 6 }, end_day: { id: 5216, month: 8, day: 10, wday: 4, year: 2023, weekday: Thu, mname: Aug, week: 32, dayid: 5, timeid: 1, timeid_exact: 1, formatted: 'Aug 10, 2023', iso8601: '2023-08-10T00:00:00+0200', time: '00:00', timestamp: 1691618400, hours: 0, minutes: 0, seconds: 0, date: '2023-08-10 00:00:00', day_of_year: '221', week_adjusted: 32, sp_wday: 5 }, requested_on_timestamp: '2023-01-04 00:00:00', start_timestamp: '2023-08-11 00:00:00', end_timestamp: '2023-08-11 00:00:00', leave_type: '68', approved_by: null, rejected_by: null, rejected_on: null, reason: null, is_hourly: '0', unique_id: null, deduct_days: '0', created_at: '2023-01-04 15:03:31', updated_at: '2023-01-04 15:06:04', deleted_at: null, created_by: '39778', updated_by: '39778', deleted_by: null, vendor_id: '11', leave_type_name: Vacation, dont_deduct_from_vac: '0', max_num_of_staff_at_once: '0', employee: '40050', employee_name: 'Istvam Kocovic', until: { id: 5217, month: 8, day: 11, wday: 5, year: 2023, weekday: Fri, mname: Aug, week: 32, dayid: 6, timeid: 1, timeid_exact: 1, formatted: 'Aug 11, 2023', iso8601: '2023-08-11T00:00:00+0200', time: '00:00', timestamp: 1691704800, hours: 0, minutes: 0, seconds: 0, date: '2023-08-11 00:00:00', day_of_year: '222', week_adjusted: 32, sp_wday: 6 }, length: 0, total_days: 0, total_quarters_used: 0, total_human_friendly: N/A, total_time_alotted: { 'y': 0, m: 0, d: 0, h: 0, i: 0, s: 0, f: 0, weekday: 0, weekday_behavior: 0, first_last_day_of: 0, invert: 0, days: 0, special_type: 0, special_amount: 0, have_weekday_relative: 0, have_special_relative: 0 }, integrations: { Workato: [{ id: '1', leave_id: 3, company_id: '60', integration_type: 11, integration_id: fd72fab7db654fa3adbbe83ca23c2023, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', error: 'Unable to find entity where integration_id=fd72fab7db654fa3adbbe83ca23c20236 and integration_type=11.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    delete:
      tags:
        - Integrations
      summary: 'Delete leave'
      description: 'Delete a leave with given integration id'
      operationId: deleteLeave
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLeaveObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [], metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                error:
                  summary: 'error response'
                  value: { status: 14, data: 'Delete Failed - Your DELETE request failed', error: 'Unable to find entity where integration_id=152046dee350017fb2cf8a1a0b634139 and integration_type=11.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/leaves':
    get:
      tags:
        - Integrations
      summary: 'Get all leaves'
      description: 'Return data about all leavs under the company'
      operationId: getLeaves
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/start_date'
        -
          $ref: '#/components/parameters/end_date'
        -
          $ref: '#/components/parameters/mode'
        -
          $ref: '#/components/parameters/user_id'
        -
          $ref: '#/components/parameters/sortby'
        -
          $ref: '#/components/parameters/deleted'
        -
          $ref: '#/components/parameters/force_user_timezone'
        -
          $ref: '#/components/parameters/location'
        -
          $ref: '#/components/parameters/position'
        -
          $ref: '#/components/parameters/page'
        -
          $ref: '#/components/parameters/limit'
        -
          $ref: '#/components/parameters/full'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLeaveObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [{ id: '3', user: '40050', store: '60', date: '1672841011', requested_on: { id: 4998, month: 1, day: 4, wday: 3, year: 2023, weekday: Wed, mname: Jan, week: 1, dayid: 4, timeid: 1, timeid_exact: 1, formatted: 'Jan 4, 2023', iso8601: '2023-01-04T00:00:00+0100', time: '00:00', timestamp: 1672786800, hours: 0, minutes: 0, seconds: 0, date: '2023-01-04 00:00:00', day_of_year: '3', week_adjusted: 1, sp_wday: 4 }, approved_on: '0', status: '0', admin: '39778', comments: '', notes: '', start_day: { id: 5217, month: 8, day: 11, wday: 5, year: 2023, weekday: Fri, mname: Aug, week: 32, dayid: 6, timeid: 1, timeid_exact: 1, formatted: 'Aug 11, 2023', iso8601: '2023-08-11T00:00:00+0200', time: '00:00', timestamp: 1691704800, hours: 0, minutes: 0, seconds: 0, date: '2023-08-11 00:00:00', day_of_year: '222', week_adjusted: 32, sp_wday: 6 }, end_day: { id: 5216, month: 8, day: 10, wday: 4, year: 2023, weekday: Thu, mname: Aug, week: 32, dayid: 5, timeid: 1, timeid_exact: 1, formatted: 'Aug 10, 2023', iso8601: '2023-08-10T00:00:00+0200', time: '00:00', timestamp: 1691618400, hours: 0, minutes: 0, seconds: 0, date: '2023-08-10 00:00:00', day_of_year: '221', week_adjusted: 32, sp_wday: 5 }, requested_on_timestamp: '2023-01-04 00:00:00', start_timestamp: '2023-08-11 00:00:00', end_timestamp: '2023-08-11 00:00:00', leave_type: '68', approved_by: null, rejected_by: null, rejected_on: null, reason: null, is_hourly: '0', unique_id: null, deduct_days: '0', created_at: '2023-01-04 15:03:31', updated_at: '2023-01-04 15:06:04', deleted_at: null, created_by: '39778', updated_by: '39778', deleted_by: null, vendor_id: '11', employee_name: 'Istvam Kocovic', leave_type_name: 'Example leave type', employee: '40050', until: { id: 5217, month: 8, day: 11, wday: 5, year: 2023, weekday: Fri, mname: Aug, week: 32, dayid: 6, timeid: 1, timeid_exact: 1, formatted: 'Aug 11, 2023', iso8601: '2023-08-11T00:00:00+0200', time: '00:00', timestamp: 1691704800, hours: 0, minutes: 0, seconds: 0, date: '2023-08-11 00:00:00', day_of_year: '222', week_adjusted: 32, sp_wday: 6 }, length: 0, total_days: 0, total_quarters_used: 0, total_human_friendly: N/A, total_time_alotted: { 'y': 0, m: 0, d: 0, h: 0, i: 0, s: 0, f: 0, weekday: 0, weekday_behavior: 0, first_last_day_of: 0, invert: 0, days: 0, special_type: 0, special_amount: 0, have_weekday_relative: 0, have_special_relative: 0 }, already_on_vacation: { count: 0, data: [] }, conflicts: { count: 0, data: [] }, integrations: { Workato: [{ id: '1', leave_id: 3, company_id: '60', integration_type: 11, integration_id: fd72fab7db654fa3adbbe83ca23c2023, extra: null }] } }, { id: '4', user: '40050', store: '60', date: '1673352390', requested_on: { id: 5004, month: 1, day: 10, wday: 2, year: 2023, weekday: Tue, mname: Jan, week: 2, dayid: 3, timeid: 1, timeid_exact: 1, formatted: 'Jan 10, 2023', iso8601: '2023-01-10T00:00:00+0100', time: '00:00', timestamp: 1673305200, hours: 0, minutes: 0, seconds: 0, date: '2023-01-10 00:00:00', day_of_year: '9', week_adjusted: 2, sp_wday: 3 }, approved_on: '0', status: '0', admin: '39778', comments: '', notes: '', start_day: { id: 5278, month: 10, day: 11, wday: 3, year: 2023, weekday: Wed, mname: Oct, week: 41, dayid: 4, timeid: 1, timeid_exact: 1, formatted: 'Oct 11, 2023', iso8601: '2023-10-11T00:00:00+0200', time: '00:00', timestamp: 1696975200, hours: 0, minutes: 0, seconds: 0, date: '2023-10-11 00:00:00', day_of_year: '283', week_adjusted: 41, sp_wday: 4 }, end_day: { id: 5278, month: 10, day: 11, wday: 3, year: 2023, weekday: Wed, mname: Oct, week: 41, dayid: 4, timeid: 1, timeid_exact: 1, formatted: 'Oct 11, 2023', iso8601: '2023-10-11T00:00:00+0200', time: '00:00', timestamp: 1696975200, hours: 0, minutes: 0, seconds: 0, date: '2023-10-11 00:00:00', day_of_year: '283', week_adjusted: 41, sp_wday: 4 }, requested_on_timestamp: '2023-01-10 00:00:00', start_timestamp: '2023-10-11 00:00:00', end_timestamp: '2023-10-12 00:00:00', leave_type: '68', approved_by: null, rejected_by: null, rejected_on: null, reason: null, is_hourly: '0', unique_id: null, deduct_days: '0', created_at: '2023-01-10 13:06:30', updated_at: '2023-01-10 13:06:30', deleted_at: null, created_by: '39778', updated_by: null, deleted_by: null, vendor_id: '11', employee_name: 'Istvam Kocovic', leave_type_name: Vacation, employee: '40050', until: { id: 5279, month: 10, day: 12, wday: 4, year: 2023, weekday: Thu, mname: Oct, week: 41, dayid: 5, timeid: 1, timeid_exact: 1, formatted: 'Oct 12, 2023', iso8601: '2023-10-12T00:00:00+0200', time: '00:00', timestamp: 1697061600, hours: 0, minutes: 0, seconds: 0, date: '2023-10-12 00:00:00', day_of_year: '284', week_adjusted: 41, sp_wday: 5 }, length: 1, total_days: 1, total_quarters_used: 32, total_human_friendly: 1day, total_time_alotted: { 'y': 0, m: 0, d: 1, h: 0, i: 0, s: 0, f: 0, weekday: 0, weekday_behavior: 0, first_last_day_of: 0, invert: 1, days: 1, special_type: 0, special_amount: 0, have_weekday_relative: 0, have_special_relative: 0 }, already_on_vacation: { count: 0, data: [] }, conflicts: { count: 0, data: [] }, integrations: { Workato: [{ id: '2', leave_id: 4, company_id: '60', integration_type: 11, integration_id: fd72fab7db654fa3adbbe83ca23c20231001, extra: null }] } }], metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'success empty':
                  summary: 'empty response'
                  value: { status: 1, data: [], metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', error: 'Error happened while fetching integrations data', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    post:
      tags:
        - Integrations
      summary: 'Create or update leave'
      description: 'Create or update a leave with given integration id'
      operationId: createOrUpdateLeave
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'leave type create/update payload'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/leaveObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLeaveObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                'update success':
                  summary: 'update success response'
                  value: { status: 1, data: { id: '7', user: '40050', store: '60', date: '1673435011', requested_on: { id: 5005, month: 1, day: 11, wday: 3, year: 2023, weekday: Wed, mname: Jan, week: 2, dayid: 4, timeid: 1, timeid_exact: 1, formatted: 'Jan 11, 2023', iso8601: '2023-01-11T00:00:00+0100', time: '00:00', timestamp: 1673391600, hours: 0, minutes: 0, seconds: 0, date: '2023-01-11 00:00:00', day_of_year: '10', week_adjusted: 2, sp_wday: 4 }, approved_on: '0', status: '0', admin: '39778', comments: '', notes: '', start_day: { id: 5186, month: 7, day: 11, wday: 2, year: 2023, weekday: Tue, mname: Jul, week: 28, dayid: 3, timeid: 1, timeid_exact: 1, formatted: 'Jul 11, 2023', iso8601: '2023-07-11T00:00:00+0200', time: '00:00', timestamp: 1689026400, hours: 0, minutes: 0, seconds: 0, date: '2023-07-11 00:00:00', day_of_year: '191', week_adjusted: 28, sp_wday: 3 }, end_day: { id: 5186, month: 7, day: 11, wday: 2, year: 2023, weekday: Tue, mname: Jul, week: 28, dayid: 3, timeid: 1, timeid_exact: 1, formatted: 'Jul 11, 2023', iso8601: '2023-07-11T00:00:00+0200', time: '00:00', timestamp: 1689026400, hours: 0, minutes: 0, seconds: 0, date: '2023-07-11 00:00:00', day_of_year: '191', week_adjusted: 28, sp_wday: 3 }, requested_on_timestamp: '2023-01-11 00:00:00', start_timestamp: '2023-07-11 00:00:00', end_timestamp: '2023-07-12 00:00:00', leave_type: '68', approved_by: '0', rejected_by: '0', rejected_on: '0', reason: null, is_hourly: '1', unique_id: null, deduct_days: '0', created_at: '2023-01-11 12:03:31', updated_at: '2023-01-11 12:03:31', deleted_at: null, created_by: 39778, updated_by: null, deleted_by: null, vendor_id: '11', leave_type_name: Vacation, dont_deduct_from_vac: '0', max_num_of_staff_at_once: '0', employee: '40050', employee_name: 'Istvam Kocovic', until: { id: 5187, month: 7, day: 12, wday: 3, year: 2023, weekday: Wed, mname: Jul, week: 28, dayid: 4, timeid: 1, timeid_exact: 1, formatted: 'Jul 12, 2023', iso8601: '2023-07-12T00:00:00+0200', time: '00:00', timestamp: 1689112800, hours: 0, minutes: 0, seconds: 0, date: '2023-07-12 00:00:00', day_of_year: '192', week_adjusted: 28, sp_wday: 4 }, length: 1, total_days: 1, total_quarters_used: 32, total_human_friendly: 1day, total_time_alotted: { 'y': 0, m: 0, d: 1, h: 0, i: 0, s: 0, f: 0, weekday: 0, weekday_behavior: 0, first_last_day_of: 0, invert: 1, days: 1, special_type: 0, special_amount: 0, have_weekday_relative: 0, have_special_relative: 0 }, integrations: { Workato: [{ id: '5', leave_id: 7, company_id: '60', integration_type: 11, integration_id: fd72fab7db654fa3adbbe83ca23c20231101, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'create success':
                  summary: 'create success response'
                  value: { status: 1, data: { id: '7', user: '40050', store: '60', date: '1673435011', requested_on: { id: 5005, month: 1, day: 11, wday: 3, year: 2023, weekday: Wed, mname: Jan, week: 2, dayid: 4, timeid: 1, timeid_exact: 1, formatted: 'Jan 11, 2023', iso8601: '2023-01-11T00:00:00+0100', time: '00:00', timestamp: 1673391600, hours: 0, minutes: 0, seconds: 0, date: '2023-01-11 00:00:00', day_of_year: '10', week_adjusted: 2, sp_wday: 4 }, approved_on: '0', status: '0', admin: '39778', comments: '', notes: '', start_day: { id: 5186, month: 7, day: 11, wday: 2, year: 2023, weekday: Tue, mname: Jul, week: 28, dayid: 3, timeid: 1, timeid_exact: 1, formatted: 'Jul 11, 2023', iso8601: '2023-07-11T00:00:00+0200', time: '00:00', timestamp: 1689026400, hours: 0, minutes: 0, seconds: 0, date: '2023-07-11 00:00:00', day_of_year: '191', week_adjusted: 28, sp_wday: 3 }, end_day: { id: 5186, month: 7, day: 11, wday: 2, year: 2023, weekday: Tue, mname: Jul, week: 28, dayid: 3, timeid: 1, timeid_exact: 1, formatted: 'Jul 11, 2023', iso8601: '2023-07-11T00:00:00+0200', time: '00:00', timestamp: 1689026400, hours: 0, minutes: 0, seconds: 0, date: '2023-07-11 00:00:00', day_of_year: '191', week_adjusted: 28, sp_wday: 3 }, requested_on_timestamp: '2023-01-11 00:00:00', start_timestamp: '2023-07-11 00:00:00', end_timestamp: '2023-07-12 00:00:00', leave_type: '68', approved_by: '0', rejected_by: '0', rejected_on: '0', reason: null, is_hourly: '0', unique_id: null, deduct_days: '0', created_at: '2023-01-11 12:03:31', updated_at: '2023-01-11 12:03:31', deleted_at: null, created_by: 39778, updated_by: null, deleted_by: null, vendor_id: '11', leave_type_name: Vacation, dont_deduct_from_vac: '0', max_num_of_staff_at_once: '0', employee: '40050', employee_name: 'Istvam Kocovic', until: { id: 5187, month: 7, day: 12, wday: 3, year: 2023, weekday: Wed, mname: Jul, week: 28, dayid: 4, timeid: 1, timeid_exact: 1, formatted: 'Jul 12, 2023', iso8601: '2023-07-12T00:00:00+0200', time: '00:00', timestamp: 1689112800, hours: 0, minutes: 0, seconds: 0, date: '2023-07-12 00:00:00', day_of_year: '192', week_adjusted: 28, sp_wday: 4 }, length: 1, total_days: 1, total_quarters_used: 32, total_human_friendly: 1day, total_time_alotted: { 'y': 0, m: 0, d: 1, h: 0, i: 0, s: 0, f: 0, weekday: 0, weekday_behavior: 0, first_last_day_of: 0, invert: 1, days: 1, special_type: 0, special_amount: 0, have_weekday_relative: 0, have_special_relative: 0 }, integrations: { Workato: [{ id: '5', leave_id: 7, company_id: '60', integration_type: 11, integration_id: fd72fab7db654fa3adbbe83ca23c20231101, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'create invalid param error':
                  summary: 'create invalid param error response'
                  value: { status: 89, errors: [{ id: 01gpg9jtdg51jesgzqgax3j2cj, status: 400, state: BAD_REQUEST, title: '', detail: 'Field ''is_hourly'' has error: ''String value found, but an integer is required''', source: [] }, { id: 01gpg9jtdmdhgar5xywc80ta1h, status: 400, state: BAD_REQUEST, title: '', detail: 'Field ''is_hourly'' has error: ''Does not have a value in the enumeration {0,1}''', source: [] }] }
                'update error':
                  summary: 'update error response'
                  value: { status: 8, data: 'Missing parameters - Your request is missing a required parameter', error: 'missing: integration_id', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'update permissions error':
                  summary: 'update permissions error response'
                  value: { status: 13, data: 'Update Failed - Your UPDATE request failed', error: 'You don''t have permission to perform this action', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/bulk/leaves_async':
    post:
      tags:
        - Integrations
      summary: 'Create or update leaves - bulk operation'
      description: 'Create or update each leave sent through a bulk request'
      operationId: bulkCreateOrUpdateLeave
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'bulk leave create/update payload'
        required: true
        content:
          application/json:
            schema:
              properties:
                leaves:
                  type: array
                  items: { $ref: '#/components/schemas/bulkLeaveObject' }
              type: object
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { jobId: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                accepted:
                  summary: 'accepted response'
                  value: { status: 202, data: { jobId: ba5b8b9c-acbd-437d-80ce-76188dd347ee }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Field ''leaves[0].integration_id'' has error: ''The property integration_id is required''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/leave-types/{integrationId}':
    get:
      tags:
        - Integrations
      summary: 'Get a leave type data'
      description: 'Return leave type data for given integration id'
      operationId: getLeaveType
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLeaveTypeObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { id: '10', name: type9, description: null, allow_hourly: '0', max_num_of_staff_at_once: 2, days_booked_in_advance: null, autoassign_for_new_employees: null, entitled: 363, created_at: '2022-10-1015:55:22', created_by: 39778, updated_at: '2022-10-1015:55:22', updated_by: 39778, deleted_at: null, deleted_by: null, vendor_id: 11, integrations: { Workato: [{ id: '2', leave_type_id: 10, company_id: '60', integration_type: 11, integration_id: 3aa5550b7fe348b98d7b5741afc65534, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                error:
                  summary: 'error response'
                  value: { status: 89, errors: [{ id: 01gf5t8g17k29r8t7ndr45jdkc, status: 400, state: BAD_REQUEST, title: '', detail: 'Unable to find entity where integration_id=int101020221 and integration_type=11.', source: [] }] }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    delete:
      tags:
        - Integrations
      summary: 'Delete leave type'
      description: 'Delete a leave type with given integration id'
      operationId: deleteLeaveType
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLeaveTypeObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [], metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                error:
                  summary: 'error response'
                  value: { status: 14, data: 'Delete Failed - Your DELETE request failed', error: 'Unable to find entity where integration_id=152046dee350017fb2cf8a1a0b634139 and integration_type=11.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/leave-types':
    get:
      tags:
        - Integrations
      summary: 'Get all leave types'
      description: 'Return data about all leave types under the company'
      operationId: getLeaveTypes
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLeaveTypeObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [{ id: '9', name: type8, description: null, allow_hourly: '0', max_num_of_staff_at_once: 4, days_booked_in_advance: null, autoassign_for_new_employees: null, entitled: 364, created_at: '2022-10-10 14:39:46', created_by: 39778, updated_at: '2022-10-10 14:41:44', updated_by: 39778, deleted_at: null, deleted_by: null, vendor_id: 11, integrations: { Workato: [{ id: '1', leave_type_id: 9, company_id: '60', integration_type: 11, integration_id: int10102022, extra: null }] } }, { id: '10', name: type9, description: null, allow_hourly: '0', max_num_of_staff_at_once: 2, days_booked_in_advance: null, autoassign_for_new_employees: null, entitled: 363, created_at: '2022-10-10 15:55:22', created_by: 39778, updated_at: '2022-10-10 15:55:22', updated_by: 39778, deleted_at: null, deleted_by: null, vendor_id: 11, integrations: { Workato: [{ id: '2', leave_type_id: 10, company_id: '60', integration_type: 11, integration_id: int10102022new, extra: null }] } }], metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'success empty':
                  summary: 'empty response'
                  value: { status: 1, data: [], metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', error: 'Error happened while fetching integrations data', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    post:
      tags:
        - Integrations
      summary: 'Create or update leave type'
      description: 'Create or update a leave type with given integration id'
      operationId: createOrUpdateLeaveType
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'leave type create/update payload'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/leaveTypeObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLeaveTypeObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                'update success':
                  summary: 'update success response'
                  value: { status: 1, data: { id: '10', name: type9, description: null, allow_hourly: '0', max_num_of_staff_at_once: 2, days_booked_in_advance: null, autoassign_for_new_employees: null, entitled: 363, created_at: '2022-10-1015:55:22', created_by: 39778, updated_at: '2022-10-10 15:55:22', updated_by: 39778, deleted_at: null, deleted_by: null, vendor_id: 11, integrations: { Workato: [{ id: '2', leave_type_id: 10, company_id: '60', integration_type: 11, integration_id: 3aa5550b7fe348b98d7b5741afc65534, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'create success':
                  summary: 'create success response'
                  value: { status: 1, data: { id: '10', name: type9, description: null, allow_hourly: '0', max_num_of_staff_at_once: 3, days_booked_in_advance: null, autoassign_for_new_employees: null, entitled: 363, created_at: '2022-10-1015:55:22', created_by: 39778, updated_at: '2022-10-10 16:32:25', updated_by: 39778, deleted_at: null, deleted_by: null, vendor_id: 11, integrations: { Workato: [{ id: '2', leave_type_id: 10, company_id: '60', integration_type: 11, integration_id: 3aa5550b7fe348b98d7b5741afc65534, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'create error':
                  summary: 'create error response'
                  value: { status: 12, data: 'Create Failed - Your CREATE request failed', error: 'Leave type with title: type9, already exists.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'create invalid param error':
                  summary: 'create invalid param error response'
                  value: { status: 89, errors: [{ id: 01gf5y2vw9w9eybe2vqydt00gf, status: 400, state: BAD_REQUEST, title: '', detail: 'Field ''entitled'' has error: ''String value found, but an integer is required''', source: [] }] }
                'update error':
                  summary: 'update error response'
                  value: { status: 8, data: 'Missing parameters - Your request is missing a required parameter', error: 'missing: title', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'update permissions error':
                  summary: 'update permissions error response'
                  value: { status: 13, data: 'Update Failed - Your UPDATE request failed', error: 'You don''t have permission to perform this action', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/bulk/leave_types_async':
    post:
      tags:
        - Integrations
      summary: 'Create or update leave types - bulk operation'
      description: 'Create or update each leave type sent through a bulk request'
      operationId: bulkCreateOrUpdateLeaveType
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'bulk leave type create/update payload'
        required: true
        content:
          application/json:
            schema:
              properties:
                leavetypes:
                  type: array
                  items: { $ref: '#/components/schemas/bulkLeaveTypeObject' }
              type: object
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { jobId: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                accepted:
                  summary: 'accepted response'
                  value: { status: 202, data: { jobId: ba5b8b9c-acbd-437d-80ce-76188dd347ee }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Field ''leavetypes[0].integration_id'' has error: ''The property integration_id is required''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/locations/{integrationId}':
    get:
      tags:
        - Integrations
      summary: 'Get a location data'
      description: 'Return location data for given integration id'
      operationId: getLocation
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLocationObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { id: 605255, name: Lahore, country: '', address: '', lat: 0, lon: 0, store: 60, type: 1, notes: '', timezone_id: 0, map: '', directions: '', unique_id: null, deleted: false, vendor_id: 11, integrations: { Workato: [{ id: '60', location_id: 605255, company_id: '60', integration_type: 11, integration_id: 123456789abcdemk, extra: null }] } }, metadata: [], error: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', error: 'Unable to find entity where integration_id=152046dee350017fb2cf8a1a0b634137 and integration_type=11.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    delete:
      tags:
        - Integrations
      summary: 'Delete location'
      description: 'Delete a location with given integration id'
      operationId: deleteLocation
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLocationObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [], metadata: [], error: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 14, data: 'Delete Failed - Your DELETE request failed', error: 'Unable to find entity where integration_id=152046dee350017fb2cf8a1a0b634139 and integration_type=11.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/location':
    post:
      tags:
        - Integrations
      summary: 'Create or update location'
      description: 'Create or update a location with given integration id'
      operationId: createOrUpdateLocation
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'location create/update payload'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/locationObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLocationObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                'update success':
                  summary: 'update success response'
                  value: { status: 1, data: { id: 605256, name: Lahore, country: PK, address: null, lat: 0, lon: 0, store: 60, type: 1, notes: null, timezone_id: 0, map: '', directions: '', unique_id: null, deleted: false, vendor_id: 11, integrations: { Workato: [{ id: '61', location_id: 605256, company_id: '60', integration_type: 11, integration_id: 17092022abcdef, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'create success':
                  summary: 'create success response'
                  value: { status: 1, data: { id: 605256, name: Lahore, country: null, address: null, lat: 0, lon: 0, store: 60, type: 1, notes: null, timezone_id: 0, map: '', directions: '', unique_id: null, deleted: false, vendor_id: 11, integrations: { Workato: [{ id: '61', location_id: 605256, company_id: '60', integration_type: 11, integration_id: 17092022abcdef, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'create error':
                  summary: 'create error response'
                  value: { status: 12, data: 'Create Failed - Your CREATE request failed', error: 'Location already exists.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'create invalid param error':
                  summary: 'create invalid param error response'
                  value: { status: 9, data: 'Invalid parameters - Your request has an invalid parameter type', error: 'Supplied data has failed validation', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'update error':
                  summary: 'update error response'
                  value: { status: 8, data: 'Missing parameters - Your request is missing a required parameter', error: 'missing: name', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'update permissions error':
                  summary: 'update permissions error response'
                  value: { status: 13, data: 'Update Failed - Your UPDATE request failed', error: 'You don''t have permission to perform this action', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/locations':
    get:
      tags:
        - Integrations
      summary: 'Get all locations'
      description: 'Return data about all locations under the company'
      operationId: getLocations
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponseLocationObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [{ id: 605256, name: Lahore, country: PK, address: '', lat: 0, lon: 0, store: 60, type: 1, notes: '', timezone_id: 0, map: '', directions: '', unique_id: null, deleted: false, vendor_id: 11, integrations: { Workato: [{ id: '61', location_id: 605256, company_id: '60', integration_type: 11, integration_id: 17092022abcdef, extra: null }] } }, { id: 605257, name: Lahore2, country: '', address: '', lat: 0, lon: 0, store: 60, type: 1, notes: '', timezone_id: 0, map: '', directions: '', unique_id: null, deleted: false, vendor_id: 11, integrations: { Workato: [{ id: '62', location_id: 605257, company_id: '60', integration_type: 11, integration_id: 17092022abcdefg, extra: null }] } }], metadata: [], error: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'success empty':
                  summary: 'empty response'
                  value: { status: 1, data: [], metadata: [], error: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', error: 'Error happened while fetching integrations data', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/bulk/locations_async':
    post:
      tags:
        - Integrations
      summary: 'Create or update locations - bulk operation'
      description: 'Create or update each location sent through a bulk request'
      operationId: bulkCreateOrUpdateLocation
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'bulk location create/update payload'
        required: true
        content:
          application/json:
            schema:
              properties:
                locations:
                  type: array
                  items: { $ref: '#/components/schemas/bulkLocationObject' }
              type: object
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { jobId: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                accepted:
                  summary: 'accepted response'
                  value: { status: 202, data: { jobId: ba5b8b9c-acbd-437d-80ce-76188dd347ee }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Field ''locations[0].integration_id'' has error: ''The property integration_id is required''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/positions/{integrationId}':
    get:
      tags:
        - Integrations
      summary: 'Get a position data'
      description: 'Return position data for given integration id'
      operationId: getPosition
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponsePositionObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: { id: 1465311, active: 1, name: positionposition10, start_time: { id: 1, time: '00:00' }, end_time: { id: 1, time: '00:00' }, color: 1, ical: 'https://example.com/ical/-3dcd4e8b14cd5325f2ed51c51fcaaa46.ics?1663236666000', visible: 1, notify: 1, job_code: null, unique_id: null, vendor_id: 11, skill_id: null, deleted: false, integrations: { Workato: [{ id: '544', position_id: 1465311, company_id: '60', integration_type: 11, integration_id: 9fc006a67f450178bbd416dd1998a70d, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', error: 'Unable to find entity where integration_id=9fc006a67f450178bbd416dd1998a70m and integration_type=11.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
    delete:
      tags:
        - Integrations
      summary: 'Delete position'
      description: 'Delete a position with given integration id'
      operationId: deletePosition
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
        -
          $ref: '#/components/parameters/integrationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponsePositionObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [], metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
                error:
                  summary: 'error response'
                  value: { status: 14, data: 'Delete Failed - Your DELETE request failed', errors: 'Unable to find entity where integration_id=9fc006a67f450178bbd416dd1998a70m and integration_type=11.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/position':
    post:
      tags:
        - Integrations
      summary: 'Create or update position'
      description: 'Create or update a position with given integration id'
      operationId: createOrUpdatePosition
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'position create/update payload'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/positionObject'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponsePositionObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                'update success':
                  summary: 'update success response'
                  value: { status: 1, data: { id: 1465313, active: 1, name: testposition1, start_time: { id: 1, time: '00:00' }, end_time: { id: 1, time: '00:00' }, color: 2, ical: 'https://example.com/ical/-0603dd31a58951671c890b2b621875e2.ics?1663245314000', visible: 1, notify: 1, job_code: null, skill_id: null, unique_id: null, integrations: { Workato: [{ id: '546', position_id: 1465313, company_id: '60', integration_type: 11, integration_id: 9fc006a67f450178bbd416dd1998a70k, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'create success':
                  summary: 'create success response'
                  value: { status: 1, data: { id: 1465313, active: 1, name: testposition1, start_time: { id: 1, time: '00:00' }, end_time: { id: 1, time: '00:00' }, color: 1, ical: 'https://example.com/ical/-0603dd31a58951671c890b2b621875e2.ics?1663245314000', visible: 1, notify: 1, job_code: null, skill_id: null, unique_id: null, integrations: { Workato: [{ id: '546', position_id: 1465313, company_id: '60', integration_type: 11, integration_id: 9fc006a67f450178bbd416dd1998a70k, extra: null }] } }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'create error':
                  summary: 'create error response'
                  value: { status: 12, data: 'Create Failed - Your CREATE request failed', errors: 'Position already exists.', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'create invalid param error':
                  summary: 'create invalid param error response'
                  value: { status: 9, data: 'Invalid parameters - Your request has an invalid parameter type', error: 'integer expected: color', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'update error':
                  summary: 'update error response'
                  value: { status: 8, data: 'Missing parameters - Your request is missing a required parameter', error: 'missing: name', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                'update permissions error':
                  summary: 'update permissions error response'
                  value: { status: 13, data: 'Update Failed - Your UPDATE request failed', errors: 'You don''t have permission to perform this action', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/positions':
    get:
      tags:
        - Integrations
      summary: 'Get all positions'
      description: 'Return data about all positions under the company'
      operationId: getPositions
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - { $ref: '#/components/schemas/ResponsePositionObject' }
                  - { $ref: '#/components/schemas/ResponseObjectWithErrors' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutError' }
                  - { $ref: '#/components/schemas/ResponseObjectWithoutMetadata' }
              examples:
                success:
                  summary: 'success response'
                  value: { status: 1, data: [{ id: 1464822, active: 1, name: AccountingSpecialist-AP, start_time: { id: 1, time: '00:00' }, end_time: { id: 97, time: '24:00' }, color: 1, ical: 'https://example.com/ical/-9955e572b07faeeadfeefaab8f6d81ed.ics?1663249709000', visible: 1, notify: 1, job_code: null, unique_id: null, vendor_id: 5, skill_id: null, deleted: false, total_employees: 1, integrations: { Workday: [{ id: '56', position_id: 1464822, company_id: '60', integration_type: 5, integration_id: 9322517e4b1847fbb9c329294d2603e0, extra: null }] } }, { id: 1464782, active: 1, name: AccountingSpecialist-AR, start_time: { id: 1, time: '00:00' }, end_time: { id: 97, time: '24:00' }, color: 1, ical: 'https://example.com/ical/-9dd083a06987f1cde2b7305f96073f46.ics?1663249709000', visible: 1, notify: 1, job_code: null, unique_id: null, vendor_id: 5, skill_id: null, deleted: false, total_employees: 0, integrations: { Workday: [{ id: '16', position_id: 1464782, company_id: '60', integration_type: 5, integration_id: ef2e03153513489685f451eeb1cc329e, extra: null }] } }, { id: 1464951, active: 1, name: AdministrativeAssistant, start_time: { id: 1, time: '00:00' }, end_time: { id: 97, time: '24:00' }, color: 1, ical: 'https://example.com/ical/-1ef184c4cc4ce56ae768ff03d8841d08.ics?1663249709000', visible: 1, notify: 1, job_code: null, unique_id: null, vendor_id: 5, skill_id: null, deleted: false, total_employees: 0, integrations: { Workday: [{ id: '185', position_id: 1464951, company_id: '60', integration_type: 5, integration_id: cc46bfb6cb0646c4b7e24a757945aed5, extra: null }] } }], metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, error: null }
                'success empty':
                  summary: 'empty response'
                  value: { status: 1, data: [], metadata: [], errors: null, token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
                error:
                  summary: 'error response'
                  value: { status: 15, data: 'Get Failed - Your GET request failed', errors: 'Error happened while fetching integrations data', token: b1e43398e00b11ec9d640242ac120002aaf78e14 }
        '500':
          $ref: '#/components/responses/500'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
  '/api/v2/integration-api/{vendorType}/bulk/positions_async':
    post:
      tags:
        - Integrations
      summary: 'Create or update positions - bulk operation'
      description: 'Create or update each position sent through a bulk request'
      operationId: bulkCreateOrUpdatePosition
      parameters:
        -
          $ref: '#/components/parameters/vendorType'
      requestBody:
        description: 'bulk position create/update payload'
        required: true
        content:
          application/json:
            schema:
              properties:
                positions:
                  type: array
                  items: { $ref: '#/components/schemas/bulkPositionObject' }
              type: object
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  data: { properties: { jobId: { type: string } }, type: object }
                  metadata: { type: object }
                  errors: { type: object }
                  token: { type: string }
                type: object
              examples:
                accepted:
                  summary: 'accepted response'
                  value: { status: 202, data: { jobId: ba5b8b9c-acbd-437d-80ce-76188dd347ee }, metadata: [], token: b1e43398e00b11ec9d640242ac120002aaf78e14, errors: null }
        '500':
          $ref: '#/components/responses/500'
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                properties:
                  status: { type: integer }
                  errors: { properties: { id: { type: string }, status: { type: integer }, state: { type: string }, title: { type: string }, detail: { type: string }, source: { type: object } }, type: object }
                type: object
              examples:
                'Bad Request':
                  summary: 'Bad Request'
                  value: { status: 89, errors: { id: 01gap45sjc1gk77t19xcyq0ymq, status: 400, state: BAD_REQUEST, title: '', detail: 'Field ''positions[0].integration_id'' has error: ''The property integration_id is required''', source: [] } }
        '401':
          $ref: '#/components/responses/401'
components:
  schemas:
    responseError400:
      properties:
        status:
          type: integer
        data:
          nullable: true
        error:
          type: string
      type: object
    responseError401:
      properties:
        status:
          type: integer
        data:
          type: string
        error:
          type: string
        token:
          type: string
      type: object
    responseError500:
      properties:
        error:
          type: string
      type: object
    ResponseObject:
      properties:
        status:
          type: integer
          nullable: false
        data:
          oneOf:
            -
              $ref: '#/components/schemas/bulkEmployeeObject'
            -
              type: string
            -
              type: array
              items:
                $ref: '#/components/schemas/bulkEmployeeObject'
        metadata:
          type: array
          items:
            type: object
        error:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
      type: object
    ResponseLocationObject:
      properties:
        status:
          type: integer
          nullable: false
        data:
          oneOf:
            -
              $ref: '#/components/schemas/bulkLocationObject'
            -
              type: string
            -
              type: array
              items:
                $ref: '#/components/schemas/bulkLocationObject'
        metadata:
          type: array
          items:
            type: object
        error:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
      type: object
    ResponsePositionObject:
      properties:
        status:
          type: integer
          nullable: false
        data:
          oneOf:
            -
              $ref: '#/components/schemas/bulkPositionObject'
            -
              type: string
            -
              type: array
              items:
                $ref: '#/components/schemas/bulkPositionObject'
        metadata:
          type: array
          items:
            type: object
        error:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
      type: object
    ResponseEmployeePositionObject:
      properties:
        status:
          type: integer
          nullable: false
        data:
          oneOf:
            -
              $ref: '#/components/schemas/bulkEmployeePositionObject'
            -
              type: string
            -
              type: array
              items:
                $ref: '#/components/schemas/bulkEmployeePositionObject'
        metadata:
          type: array
          items:
            type: object
        error:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
      type: object
    ResponseLeaveTypeObject:
      properties:
        status:
          type: integer
          nullable: false
        data:
          oneOf:
            -
              $ref: '#/components/schemas/bulkLeaveTypeObject'
            -
              type: string
            -
              type: array
              items:
                $ref: '#/components/schemas/bulkLeaveTypeObject'
        metadata:
          type: array
          items:
            type: object
        error:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
      type: object
    ResponseEmployeeLeaveTypeObject:
      properties:
        status:
          type: integer
          nullable: false
        data:
          oneOf:
            -
              $ref: '#/components/schemas/bulkEmployeeLeaveTypeObject'
            -
              type: string
            -
              type: array
              items:
                $ref: '#/components/schemas/bulkEmployeeLeaveTypeObject'
        metadata:
          type: array
          items:
            type: object
        error:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
      type: object
    ResponseLeaveObject:
      properties:
        status:
          type: integer
          nullable: false
        data:
          oneOf:
            -
              $ref: '#/components/schemas/bulkLeaveObject'
            -
              type: string
            -
              type: array
              items:
                $ref: '#/components/schemas/bulkLeaveObject'
        metadata:
          type: array
          items:
            type: object
        error:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
      type: object
    ResponseCompanyObject:
      properties:
        status:
          type: integer
          nullable: false
        data:
          type: array
          items:
            type: object
        metadata:
          type: array
          items:
            type: object
        error:
          type: string
          nullable: true
        token:
          type: string
          nullable: true
      type: object
    ResponseObjectWithoutMetadata:
      properties:
        status:
          type: integer
          nullable: false
        data:
          type: string
          nullable: false
        token:
          type: string
          nullable: false
        error:
          type: string
          nullable: false
      type: object
    ResponseObjectWithoutError:
      properties:
        status:
          type: integer
          nullable: false
        data:
          type: string
          nullable: false
        token:
          type: string
          nullable: false
      type: object
    ResponseObjectWithErrors:
      properties:
        status:
          type: integer
          nullable: false
        errors:
          type: array
          items:
            type: object
          minItems: 1
      type: object
    employeeObject:
      required:
        - integration_id
        - first_name
      properties:
        integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        eid:
          type: string
          example: P5216
        status:
          type: integer
          enum:
            - 0
            - 1
            - -1
            - -2
        group:
          type: integer
          enum:
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
        first_name:
          type: string
          minLength: 1
          example: Paul
          nullable: false
        middle_name:
          type: string
          minLength: 1
          example: Smith
        last_name:
          type: string
          minLength: 1
          example: Jones
        nick_name:
          type: string
          minLength: 1
          example: PJ
        email:
          type: string
          maxLength: 80
          minLength: 1
          example: paul.jones@my-company.com
        birth_day:
          type: integer
          maximum: 31
          minimum: 1
          example: 1
        birth_month:
          type: integer
          maximum: 12
          minimum: 1
          example: 12
        birth_year:
          type: string
          example: 1975
        cell_phone:
          type: string
          example: 123-456-789
        wage:
          type: integer
          example: 50
        p_email:
          type: integer
          enum:
            - 0
            - 1
        home_phone:
          type: string
          example: 1-987-654-3210
        address:
          type: string
          maxLength: 100
          minLength: 1
          example: '5124 Hadfield St'
        city:
          type: string
          maxLength: 50
          minLength: 1
          example: Philadelphia
        state:
          type: string
          maxLength: 50
          minLength: 1
          example: Pennsylvania
        job_title:
          type: string
          maxLength: 255
          minLength: 1
          example: CEO
        gender:
          type: string
          enum:
            - M
            - F
          example: M
        zip:
          type: string
          maxLength: 50
          minLength: 1
          example: '19143'
        notes:
          type: string
          example: 'some note'
        password:
          type: string
          minLength: 8
          example: 6KU57XWvmVbT4WLC
        username:
          type: string
          minLength: 3
          example: randomTestUser
        sso_username:
          type: string
          maxLength: 255
          example: test_sso_username
        addschedule:
          type: string
        removeschedule:
          type: string
        addskill:
          type: integer
        removeskill:
          type: integer
        send_activation:
          type: integer
          enum:
            - 1
          example: 1
        language:
          type: string
          example: en_US
        timezone_id:
          type: integer
          example: 153
        undertime:
          type: integer
          maximum: 60
          minimum: 0
          example: 30
        overtime:
          type: integer
          maximum: 80
          minimum: -2
          example: 16
        daily_overtime:
          type: integer
          maximum: 24
          minimum: 0
          example: 2
        max_days_row:
          type: integer
          maximum: 30
          minimum: -1
          example: 5
        pref_shift_autoconfirm:
          type: integer
          enum:
            - -2
            - -1
            - 1
          example: 1
        location:
          type: integer
        monthly_overtime:
          type: integer
          maximum: 250
          minimum: -2
          example: 30
        monthly_undertime:
          type: integer
          maximum: 250
          minimum: 0
          example: 60
        pref_mtimebshifts:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 12
            - 16
            - 20
            - 24
            - 28
            - 32
            - 36
            - 40
            - 44
            - 48
          example: 12
        work_start_date:
          type: string
          format: 'Y-m-d H:i:s'
          example: '2022-05-20 07:30:00'
        settings:
          type: string
        primary_skill:
          type: integer
        unique_id:
          type: string
          maxLength: 64
          minLength: 1
          example: teST-01234sog
        employee_type:
          description: '0: None, 1: Full time, 2: Part time, 3: Seasonal, 4: Temporary, 5: Contractor, 6: Volunteer'
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
          example: 1
        pay_type:
          description: '0: None, 1: Hourly, 2: Salary, 3: Commission, 4: Exception Hourly, 5: Daily, 6: Weekly, 7: Monthly, 8: Piece Rate, 9: Contract, 10: Pro Rata'
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
          example: 2
        confirm_user:
          type: string
      type: object
    bulkEmployeeObject:
      required:
        - integration_id
        - first_name
      properties:
        integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        first_name:
          type: string
          minLength: 1
          example: Paul
          nullable: false
        eid:
          type: string
          example: P5216
        status:
          type: integer
          enum:
            - 0
            - 1
            - -1
            - -2
        group:
          type: integer
          enum:
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
        middle_name:
          type: string
          minLength: 1
          example: Smith
        last_name:
          type: string
          minLength: 1
          example: Jones
        nick_name:
          type: string
          minLength: 1
          example: PJ
        birth_day:
          type: integer
          maximum: 31
          minimum: 1
          example: 1
        birth_month:
          type: integer
          maximum: 12
          minimum: 1
          example: 12
        birth_year:
          type: string
          example: 1975
        cell_phone:
          type: string
          example: 123-456-789
        p_email:
          type: integer
          enum:
            - 0
            - 1
        home_phone:
          type: string
          example: 1-987-654-3210
        address:
          type: string
          maxLength: 100
          minLength: 1
          example: '5124 Hadfield St'
        city:
          type: string
          maxLength: 50
          minLength: 1
          example: Philadelphia
        state:
          type: string
          maxLength: 50
          minLength: 1
          example: Pennsylvania
        job_title:
          type: string
          maxLength: 255
          minLength: 1
          example: CEO
        zip:
          type: string
          maxLength: 50
          minLength: 1
          example: '19143'
        notes:
          type: string
          example: 'some note'
        username:
          type: string
          minLength: 3
          example: my_username
        sso_username:
          type: string
          maxLength: 255
          example: test_sso_username
        send_activation:
          type: integer
          enum:
            - 1
          example: 1
        undertime:
          type: integer
          maximum: 60
          minimum: 0
          example: 30
        overtime:
          type: integer
          maximum: 80
          minimum: -2
          example: 16
        daily_overtime:
          type: integer
          maximum: 24
          minimum: 0
          example: 2
        max_days_row:
          type: integer
          maximum: 30
          minimum: -1
          example: 5
        pref_shift_autoconfirm:
          type: integer
          enum:
            - -2
            - -1
            - 1
          example: 1
        monthly_overtime:
          type: integer
          maximum: 250
          minimum: -2
          example: 30
        monthly_undertime:
          type: integer
          maximum: 250
          minimum: 0
          example: 60
        pref_mtimebshifts:
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 12
            - 16
            - 20
            - 24
            - 28
            - 32
            - 36
            - 40
            - 44
            - 48
          example: 12
        employee_type:
          description: '0: None, 1: Full time, 2: Part time, 3: Seasonal, 4: Temporary, 5: Contractor, 6: Volunteer'
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
          example: 1
        pay_type:
          description: '0: None, 1: Hourly, 2: Salary, 3: Commission, 4: Exception Hourly, 5: Daily, 6: Weekly, 7: Monthly, 8: Piece Rate, 9: Contract, 10: Pro Rata'
          type: integer
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
            - 10
          example: 2
        confirm_user:
          type: string
      type: object
    locationObject:
      required:
        - integration_id
        - name
        - type
      properties:
        integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        name:
          type: string
          maxLength: 255
          minLength: 1
          example: Lahore
          nullable: false
        type:
          type: integer
          enum:
            - 1
            - 2
            - -1
          nullable: false
        country:
          type: string
          maxLength: 50
          minLength: 1
          example: PK
        address:
          type: string
          maxLength: 255
          minLength: 1
          example: '235 Montgomery Street #500, San Francisco, CA 9410'
        lat:
          type: string
          maxLength: 50
          minLength: 1
          example: '14.5995124'
        lon:
          type: string
          maxLength: 50
          minLength: 1
          example: '120.9842195'
        notes:
          type: string
          maxLength: 255
          minLength: 1
          example: notes
        timezone_id:
          type: integer
          example: 132
        unique_id:
          type: string
          maxLength: 64
          minLength: 1
          example: 100PK
      type: object
    bulkLocationObject:
      required:
        - integration_id
        - name
        - type
      properties:
        integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        name:
          type: string
          maxLength: 255
          minLength: 1
          example: Lahore
          nullable: false
        type:
          type: integer
          enum:
            - 1
            - 2
            - -1
          nullable: false
        country:
          type: string
          maxLength: 50
          minLength: 1
          example: PK
        address:
          type: string
          maxLength: 255
          minLength: 1
          example: '235 Montgomery Street #500, San Francisco, CA 9410'
        lat:
          type: string
          maxLength: 50
          minLength: 1
          example: '14.5995124'
        lon:
          type: string
          maxLength: 50
          minLength: 1
          example: '120.9842195'
        notes:
          type: string
          maxLength: 255
          minLength: 1
          example: notes
        timezone_id:
          type: integer
          example: 132
        unique_id:
          type: string
          maxLength: 64
          minLength: 1
          example: 100PK
      type: object
    positionObject:
      required:
        - integration_id
        - name
      properties:
        integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        active:
          type: integer
          enum:
            - 1
            - -1
        notify:
          type: integer
          enum:
            - 1
            - -1
        name:
          type: string
          maxLength: 255
          minLength: 1
          example: 'Sales Engineer'
          nullable: false
        job_code:
          type: string
          maxLength: 32
          minLength: 1
          example: C3PO
        start_time:
          type: integer
          maxLength: 97
          minLength: 1
          example: 65
        end_time:
          type: integer
          maxLength: 97
          minLength: 1
          example: 85
        location:
          type: integer
          minLength: 1
          example: 549620
        color:
          type: integer
          minLength: 1
          example: 1
        visible:
          type: integer
          enum:
            - 0
            - 1
        skill_id:
          type: integer
          minimum: 1
          example: 12
        unique_id:
          type: string
          maxLength: 64
          minLength: 1
          example: test1234
      type: object
    bulkPositionObject:
      required:
        - integration_id
        - name
      properties:
        integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        active:
          type: integer
          enum:
            - 1
            - -1
        notify:
          type: integer
          enum:
            - 1
            - -1
        name:
          type: string
          maxLength: 255
          minLength: 1
          example: 'Sales Engineer'
          nullable: false
        job_code:
          type: string
          maxLength: 32
          minLength: 1
          example: C3PO
        start_time:
          type: integer
          maxLength: 97
          minLength: 1
          example: 65
        end_time:
          type: integer
          maxLength: 97
          minLength: 1
          example: 85
        location:
          type: integer
          minLength: 1
          example: 549620
        color:
          type: integer
          minLength: 1
          example: 1
        visible:
          type: integer
          enum:
            - 0
            - 1
        skill_id:
          type: integer
          minimum: 1
          example: 12
        unique_id:
          type: string
          maxLength: 64
          minLength: 1
          example: test1234
      type: object
    employeePositionObject:
      required:
        - employee_integration_id
        - position_integration_id
      properties:
        employee_integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        position_integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        wage:
          type: string
          example: '10'
      type: object
    bulkEmployeePositionObject:
      required:
        - employee_integration_id
        - position_integration_id
      properties:
        employee_integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        position_integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        wage:
          type: string
          example: '10'
      type: object
    leaveTypeObject:
      required:
        - integration_id
        - entitled
        - title
      properties:
        integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        entitled:
          type: integer
          example: 363
          nullable: false
        title:
          type: string
          maxLength: 255
          minLength: 1
          example: vacation
          nullable: false
        do_not_deduct:
          type: integer
          enum:
            - 0
            - 1
        max_num_at_once:
          type: integer
          example: 2
        days_booked_in_advance:
          type: integer
          example: 2
        allow_hourly:
          type: integer
          enum:
            - 0
            - 1
        description:
          type: string
          maxLength: 255
          minLength: 1
          example: 'vacation leave type'
      type: object
    bulkLeaveTypeObject:
      required:
        - integration_id
        - entitled
        - title
      properties:
        integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        entitled:
          type: integer
          example: 363
          nullable: false
        title:
          type: string
          maxLength: 255
          minLength: 1
          example: vacation
          nullable: false
        deduct:
          type: integer
          enum:
            - 0
            - 1
        employees_limit:
          type: integer
          example: 2
        days_in_advance_requirement:
          type: integer
          example: 2
        allow_hours:
          type: integer
          enum:
            - 0
            - 1
        description:
          type: string
          maxLength: 255
          minLength: 1
          example: 'vacation leave type'
      type: object
    employeeLeaveTypeObject:
      required:
        - employee_integration_id
        - leave_type_integration_id
        - enabled
      properties:
        enabled:
          type: integer
          enum:
            - 0
            - 1
          nullable: false
        entitled:
          type: integer
          maximum: 366
          minimum: 1
          example: 2
      type: object
    bulkEmployeeLeaveTypeObject:
      required:
        - employee_integration_id
        - leave_type_integration_id
        - enabled
        - entitled
      properties:
        employee_integration_id:
          type: string
          maxLength: 255
          minLength: 1
          example: 9fc006a67f450178bbd416dd1998a70d
          nullable: false
        leave_type_integration_id:
          type: string
          maxLength: 255
          minLength: 1
          example: 9fc006a67f450178bbd416dd1998a7kl
          nullable: false
        enabled:
          type: string
          example: true
          nullable: false
        entitled:
          type: integer
          maximum: 366
          minimum: 1
          example: 2
          nullable: false
      type: object
    leaveObject:
      required:
        - integration_id
        - start_date
        - end_date
        - employee_integration_id
        - leavetype_integration_id
      properties:
        integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        start_date:
          type: string
          format: 'Y-m-d H:i:s'
          example: '2023-05-20 07:30:00'
          nullable: false
        end_date:
          type: string
          format: 'Y-m-d H:i:s'
          example: '2023-05-23 07:30:00'
          nullable: false
        employee_integration_id:
          type: string
          maxLength: 255
          minLength: 1
          example: 9fc006a67f450178bbd416dd1998a70d
          nullable: false
        leavetype_integration_id:
          type: string
          maxLength: 255
          minLength: 1
          example: '9992'
          nullable: false
        start_time:
          type: integer
          maxLength: 97
          minLength: 1
          example: 65
        end_time:
          type: integer
          maxLength: 97
          minLength: 1
          example: 85
        comments:
          type: string
          maxLength: 255
          minLength: 1
          example: 'Please approve my annual leave'
        notes:
          type: string
          maxLength: 255
          minLength: 1
          example: 'The first part of my annual leave'
        status:
          type: integer
          enum:
            - 0
            - 1
            - -1
            - -2
        is_hourly:
          type: integer
          enum:
            - 0
            - 1
        force_user_timezone:
          type: integer
          enum:
            - 0
            - 1
        reason:
          type: string
          maxLength: 255
          minLength: 1
          example: 'I need to use the remaining days of my leave'
        unique_id:
          type: string
          maxLength: 64
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
        deduct_days:
          type: integer
          example: 3
        extra:
          type: string
          maxLength: 255
          minLength: 1
          example: ABC
      type: object
    bulkLeaveObject:
      required:
        - integration_id
        - start_date
        - end_date
        - employee_integration_id
        - leavetype_integration_id
      properties:
        integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        start_date:
          type: string
          format: 'Y-m-d H:i:s'
          example: '2023-05-20 07:30:00'
          nullable: false
        end_date:
          type: string
          format: 'Y-m-d H:i:s'
          example: '2023-05-23 07:30:00'
          nullable: false
        employee_integration_id:
          type: string
          maxLength: 255
          minLength: 1
          example: 9fc006a67f450178bbd416dd1998a70d
          nullable: false
        leavetype_integration_id:
          type: string
          maxLength: 255
          minLength: 1
          example: '9992'
          nullable: false
        start_time:
          type: integer
          maxLength: 97
          minLength: 1
          example: 65
        end_time:
          type: integer
          maxLength: 97
          minLength: 1
          example: 85
        comments:
          type: string
          maxLength: 255
          minLength: 1
          example: 'Please approve my annual leave'
        notes:
          type: string
          maxLength: 255
          minLength: 1
          example: 'The first part of my annual leave'
        status:
          type: integer
          enum:
            - 0
            - 1
            - -1
            - -2
        is_hourly:
          type: integer
          enum:
            - 0
            - 1
        reason:
          type: string
          maxLength: 255
          minLength: 1
          example: 'I need to use the remaining days of my leave'
        unique_id:
          type: string
          maxLength: 64
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
        deduct_days:
          type: integer
          example: 3
      type: object
    companyObject:
      required:
        - integration_id
        - password
      properties:
        integration_id:
          type: string
          maxLength: 512
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
          nullable: false
        name:
          type: string
          maxLength: 50
          minLength: 3
          example: Company123
        administrator:
          type: string
          maxLength: 50
          minLength: 3
          example: Admin123
        password:
          type: string
          minLength: 8
          example: Pass12345
          nullable: false
        email:
          type: string
          maxLength: 80
          minLength: 6
          example: paul.jones@my-company.com
        clone_from:
          type: integer
          example: 123
        clone_positions:
          type: integer
          enum:
            - 0
            - 1
        clone_settings:
          type: integer
          enum:
            - 0
            - 1
        clone_training:
          type: integer
          enum:
            - 0
            - 1
        can_have_children:
          type: integer
          enum:
            - 0
            - 1
        unique_id:
          type: string
          maxLength: 64
          minLength: 1
          example: ac1046dee5cd1fb2cf8a1a0b634142
        domain:
          type: string
          maxLength: 50
          minLength: 3
          example: Domain123
        parent:
          type: integer
          example: '633324'
      type: object
  responses:
    '400':
      description: 'Bad request!'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError400'
          examples:
            error:
              summary: 'Bad request'
              value:
                status: 0
                data: null
                error: 'Resource not found'
    '401':
      description: 'Unauthorized! Access token is missing or invalid.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError401'
          examples:
            error:
              summary: Unauthorized
              value:
                status: 3
                data: 'Invalid token key - Please re-authenticate'
                error: 'Missing API Token.'
                token: null
    '500':
      description: 'Unexpected error occures!'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/responseError500'
          examples:
            error:
              summary: 'Internal Server Error'
              value:
                error: 'An error occurred!'
  parameters:
    integrationId:
      name: integrationId
      in: path
      description: 'Integration id'
      required: true
      schema:
        type: string
        maxLength: 512
        minLength: 1
    employeeIntegrationId:
      name: employeeIntegrationId
      in: path
      description: 'Employee id'
      required: true
      schema:
        type: string
        maxLength: 512
        minLength: 1
    positionIntegrationId:
      name: positionIntegrationId
      in: path
      description: 'Position id'
      required: true
      schema:
        type: string
        maxLength: 512
        minLength: 1
    leaveTypeIntegrationId:
      name: leaveTypeIntegrationId
      in: path
      description: 'Leave Type id'
      required: true
      schema:
        type: string
        maxLength: 512
        minLength: 1
    vendorType:
      name: vendorType
      in: path
      description: 'Vendor id'
      required: true
      schema:
        type: integer
        format: base64
    start_date:
      name: start_date
      in: query
      description: 'Start date: ''Y-m-d H:i:s'''
      required: false
      schema:
        type: string
        format: 'Y-m-d H:i:s'
    end_date:
      name: end_date
      in: query
      description: 'End date: ''Y-m-d H:i:s'''
      required: false
      schema:
        type: string
        format: 'Y-m-d H:i:s'
    mode:
      name: mode
      in: query
      description: 'Mode: ''manage'', ''requested'', ''upcoming'', ''all_requested'''
      required: false
      schema:
        type: string
    user_id:
      name: user_id
      in: query
      description: 'User Id'
      required: false
      schema:
        type: integer
    sortby:
      name: sortby
      in: query
      description: 'Sort by: ''employee_start'', ''vacation_start'''
      required: false
      schema:
        type: string
    deleted:
      name: deleted
      in: query
      description: Deleted
      required: false
      schema:
        type: integer
    force_user_timezone:
      name: force_user_timezone
      in: query
      description: 'Force user timezone: ''0'', ''1'''
      required: false
      schema:
        type: integer
    location:
      name: location
      in: query
      description: Location
      required: false
      schema:
        type: integer
    position:
      name: position
      in: query
      description: Position
      required: false
      schema:
        type: integer
    page:
      name: page
      in: query
      description: Page
      required: false
      schema:
        type: integer
    limit:
      name: limit
      in: query
      description: Limit
      required: false
      schema:
        type: integer
    full:
      name: full
      in: query
      description: Full
      required: false
      schema:
        type: integer
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    HumanityOAuth2:
      type: oauth2
      flows:
        password:
          tokenUrl: /oauth2/token.php
          scopes: {  }
security:
  -
    bearerAuth: []
  -
    HumanityOAuth2: []